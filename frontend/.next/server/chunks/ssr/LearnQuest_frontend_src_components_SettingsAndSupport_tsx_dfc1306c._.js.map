{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/documents/LearnQuest/frontend/src/components/SettingsAndSupport.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport {\n  Languages,\n  UserRoundCog,\n  Accessibility as AccessibilityIcon,\n  Speech,\n  CircleQuestionMark,\n  LaptopMinimal,\n  Monitor,\n  Settings2,\n  MessageCircleQuestionMark,\n} from \"lucide-react\";\nimport { toast } from \"sonner\";\nimport { cn } from \"@/lib/utils\";\nimport {\n  Tabs,\n  TabsList,\n  TabsTrigger,\n  TabsContent,\n} from \"@/components/ui/tabs\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Select,\n  SelectTrigger,\n  SelectValue,\n  SelectContent,\n  SelectItem,\n} from \"@/components/ui/select\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardContent,\n} from \"@/components/ui/card\";\nimport { Separator } from \"@/components/ui/separator\";\nimport {\n  Avatar,\n  AvatarImage,\n  AvatarFallback,\n} from \"@/components/ui/avatar\";\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionTrigger,\n  AccordionContent,\n} from \"@/components/ui/accordion\";\n\ntype LanguageCode =\n  | \"en\"\n  | \"hi\"\n  | \"bn\"\n  | \"te\"\n  | \"mr\"\n  | \"ta\"\n  | \"gu\"\n  | \"kn\"\n  | \"ml\"\n  | \"pa\"\n  | \"or\"\n  | \"as\";\n\ntype NotificationPrefs = {\n  email: boolean;\n  sms: boolean;\n  push: boolean;\n  weeklyDigest: boolean;\n  reminders: boolean;\n};\n\ntype AccessibilityPrefs = {\n  highContrast: boolean;\n  largeText: boolean;\n  reduceMotion: boolean;\n  captions: boolean;\n  screenReaderHints: boolean;\n};\n\ntype SyncPrefs = {\n  offlineMode: boolean;\n  autoSyncOnWifi: boolean;\n  dataSaver: boolean;\n};\n\ntype PrivacyPrefs = {\n  profileVisibility: \"everyone\" | \"classmates\" | \"only-me\";\n  analyticsSharing: boolean;\n  contentFiltering: boolean;\n};\n\ntype SettingsAndSupportProps = {\n  className?: string;\n  style?: React.CSSProperties;\n  defaultLanguage?: LanguageCode;\n  onLanguageChange?: (lang: LanguageCode) => void;\n  onProfileSave?: (data: {\n    name: string;\n    email: string;\n    phone: string;\n    avatarUrl?: string;\n  }) => void;\n  onPasswordChange?: (data: { current: string; next: string }) => void;\n  onContactSubmit?: (data: {\n    category: \"technical\" | \"billing\" | \"feedback\" | \"other\";\n    message: string;\n  }) => void;\n  initialNotifications?: Partial<NotificationPrefs>;\n  initialAccessibility?: Partial<AccessibilityPrefs>;\n  initialSync?: Partial<SyncPrefs>;\n  initialPrivacy?: Partial<PrivacyPrefs>;\n};\n\nconst languageOptions: Array<{ code: LanguageCode; label: string; native: string }> = [\n  { code: \"en\", label: \"English\", native: \"English\" },\n  { code: \"hi\", label: \"Hindi\", native: \"हिन्दी\" },\n  { code: \"bn\", label: \"Bengali\", native: \"বাংলা\" },\n  { code: \"te\", label: \"Telugu\", native: \"తెలుగు\" },\n  { code: \"mr\", label: \"Marathi\", native: \"मराठी\" },\n  { code: \"ta\", label: \"Tamil\", native: \"தமிழ்\" },\n  { code: \"gu\", label: \"Gujarati\", native: \"ગુજરાતી\" },\n  { code: \"kn\", label: \"Kannada\", native: \"ಕನ್ನಡ\" },\n  { code: \"ml\", label: \"Malayalam\", native: \"മലയാളം\" },\n  { code: \"pa\", label: \"Punjabi\", native: \"ਪੰਜਾਬੀ\" },\n  { code: \"or\", label: \"Odia\", native: \"ଓଡ଼ିଆ\" },\n  { code: \"as\", label: \"Assamese\", native: \"অসমীয়া\" },\n];\n\nconst faqItems = [\n  {\n    q: \"How do I use LearnQuest without internet?\",\n    a: \"Enable Offline Mode in Preferences. Lessons and quizzes you open will be stored on your device and sync automatically when Wi‑Fi is available.\",\n    tags: [\"offline\", \"sync\", \"rural\"],\n  },\n  {\n    q: \"Why are videos not playing on my device?\",\n    a: \"Check Device Compatibility in Troubleshooting. Try lowering video quality in Preferences > Accessibility (Reduce Motion). If issues persist, contact Support.\",\n    tags: [\"video\", \"device\", \"compatibility\"],\n  },\n  {\n    q: \"How can I change my language?\",\n    a: \"Go to Preferences and select your preferred language. The interface updates immediately.\",\n    tags: [\"language\", \"ui\"],\n  },\n  {\n    q: \"How do I reset my password?\",\n    a: \"Under Profile > Security, enter your current password and set a new one that meets strength requirements.\",\n    tags: [\"password\", \"security\"],\n  },\n  {\n    q: \"I have slow connectivity in my village. What can I do?\",\n    a: \"Turn on Data Saver and Auto Sync on Wi‑Fi only. Use text mode lessons and download content when you have connectivity.\",\n    tags: [\"rural\", \"connectivity\", \"slow\"],\n  },\n];\n\nexport default function SettingsAndSupport({\n  className,\n  style,\n  defaultLanguage = \"en\",\n  onLanguageChange,\n  onProfileSave,\n  onPasswordChange,\n  onContactSubmit,\n  initialNotifications,\n  initialAccessibility,\n  initialSync,\n  initialPrivacy,\n}: SettingsAndSupportProps) {\n  const [language, setLanguage] = React.useState<LanguageCode>(defaultLanguage);\n  const [name, setName] = React.useState<string>(\"\");\n  const [email, setEmail] = React.useState<string>(\"\");\n  const [phone, setPhone] = React.useState<string>(\"\");\n  const [avatarUrl, setAvatarUrl] = React.useState<string | undefined>(\n    \"https://images.unsplash.com/photo-1544005313-94ddf0286df2?q=80&w=256&auto=format&fit=crop\"\n  );\n  const [avatarObjectUrl, setAvatarObjectUrl] = React.useState<string | null>(null);\n\n  const [notif, setNotif] = React.useState<NotificationPrefs>({\n    email: !!initialNotifications?.email,\n    sms: !!initialNotifications?.sms,\n    push: initialNotifications?.push ?? true,\n    weeklyDigest: initialNotifications?.weeklyDigest ?? true,\n    reminders: initialNotifications?.reminders ?? true,\n  });\n\n  const [a11y, setA11y] = React.useState<AccessibilityPrefs>({\n    highContrast: !!initialAccessibility?.highContrast,\n    largeText: !!initialAccessibility?.largeText,\n    reduceMotion: !!initialAccessibility?.reduceMotion,\n    captions: initialAccessibility?.captions ?? true,\n    screenReaderHints: initialAccessibility?.screenReaderHints ?? true,\n  });\n\n  const [sync, setSync] = React.useState<SyncPrefs>({\n    offlineMode: initialSync?.offlineMode ?? true,\n    autoSyncOnWifi: initialSync?.autoSyncOnWifi ?? true,\n    dataSaver: initialSync?.dataSaver ?? true,\n  });\n\n  const [privacy, setPrivacy] = React.useState<PrivacyPrefs>({\n    profileVisibility: initialPrivacy?.profileVisibility ?? \"classmates\",\n    analyticsSharing: initialPrivacy?.analyticsSharing ?? false,\n    contentFiltering: initialPrivacy?.contentFiltering ?? true,\n  });\n\n  const [faqQuery, setFaqQuery] = React.useState<string>(\"\");\n  const [contactCategory, setContactCategory] = React.useState<\"technical\" | \"billing\" | \"feedback\" | \"other\" | undefined>();\n  const [contactMessage, setContactMessage] = React.useState<string>(\"\");\n\n  const filteredFaqs = React.useMemo(() => {\n    const q = faqQuery.trim().toLowerCase();\n    if (!q) return faqItems;\n    return faqItems.filter(\n      (f) =>\n        f.q.toLowerCase().includes(q) ||\n        f.a.toLowerCase().includes(q) ||\n        f.tags.some((t) => t.toLowerCase().includes(q))\n    );\n  }, [faqQuery]);\n\n  React.useEffect(() => {\n    // Apply visual preferences that impact the component (e.g., large text)\n    // Parent layouts should use tokens; here we only adjust a class.\n    document.documentElement.style.setProperty(\n      \"--motion-safe\",\n      a11y.reduceMotion ? \"no-preference\" : \"reduce\"\n    );\n    // Cleanup avatar object URL on unmount\n    return () => {\n      if (avatarObjectUrl) {\n        URL.revokeObjectURL(avatarObjectUrl);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [a11y.reduceMotion]);\n\n  function handleLanguageChange(next: LanguageCode) {\n    setLanguage(next);\n    toast.success(\"Language updated\", { description: \"Your interface has been updated.\" });\n    onLanguageChange?.(next);\n  }\n\n  function handleAvatarUpload(e: React.ChangeEvent<HTMLInputElement>) {\n    const file = e.target.files?.[0];\n    if (!file) return;\n    if (!file.type.startsWith(\"image/\")) {\n      toast.error(\"Please select an image file.\");\n      return;\n    }\n    const objUrl = URL.createObjectURL(file);\n    if (avatarObjectUrl) URL.revokeObjectURL(avatarObjectUrl);\n    setAvatarObjectUrl(objUrl);\n    setAvatarUrl(objUrl);\n  }\n\n  function handleProfileSave() {\n    if (!name.trim() || !email.trim()) {\n      toast.error(\"Please fill in your name and email.\");\n      return;\n    }\n    onProfileSave?.({ name: name.trim(), email: email.trim(), phone: phone.trim(), avatarUrl });\n    toast.success(\"Profile updated\", { description: \"Your profile changes have been saved.\" });\n  }\n\n  function handlePasswordChange(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const current = (form.elements.namedItem(\"currentPassword\") as HTMLInputElement)?.value;\n    const next = (form.elements.namedItem(\"newPassword\") as HTMLInputElement)?.value;\n    const confirm = (form.elements.namedItem(\"confirmPassword\") as HTMLInputElement)?.value;\n\n    if (!current || !next) {\n      toast.error(\"Please complete all password fields.\");\n      return;\n    }\n    if (next.length < 8) {\n      toast.error(\"Password too short\", { description: \"Use at least 8 characters.\" });\n      return;\n    }\n    if (next !== confirm) {\n      toast.error(\"Passwords do not match.\");\n      return;\n    }\n    onPasswordChange?.({ current, next });\n    toast.success(\"Password changed\", { description: \"Use your new password next time you sign in.\" });\n    form.reset();\n  }\n\n  function handleContactSubmit(e: React.FormEvent) {\n    e.preventDefault();\n    if (!contactCategory || !contactMessage.trim()) {\n      toast.error(\"Please select a category and enter your message.\");\n      return;\n    }\n    onContactSubmit?.({ category: contactCategory, message: contactMessage.trim() });\n    toast.success(\"Message sent\", { description: \"Our team will get back to you shortly.\" });\n    setContactCategory(undefined);\n    setContactMessage(\"\");\n  }\n\n  const labelMuted = \"text-sm text-muted-foreground\";\n  const sectionTitle = \"text-base sm:text-lg font-semibold\";\n\n  return (\n    <section\n      className={cn(\n        \"w-full max-w-full bg-card rounded-2xl border border-border p-4 sm:p-6 md:p-8 shadow-sm\",\n        className\n      )}\n      style={style}\n      aria-label=\"Settings and Support\"\n    >\n      <div className=\"flex items-start gap-3 sm:gap-4 mb-6 sm:mb-8\">\n        <div className=\"inline-flex h-10 w-10 items-center justify-center rounded-xl bg-accent\">\n          <Settings2 className=\"h-5 w-5\" aria-hidden=\"true\" />\n        </div>\n        <div className=\"min-w-0\">\n          <h2 className=\"text-xl sm:text-2xl font-bold tracking-tight\">Settings & Support</h2>\n          <p className=\"text-sm text-muted-foreground mt-1\">\n            Manage your preferences, accessibility, privacy, and get help quickly.\n          </p>\n        </div>\n      </div>\n\n      <Tabs defaultValue=\"profile\" className=\"w-full\">\n        <div className=\"overflow-x-auto\">\n          <TabsList className=\"bg-secondary/60\">\n            <TabsTrigger value=\"profile\" className=\"min-w-fit\">\n              <UserRoundCog className=\"mr-2 h-4 w-4\" aria-hidden=\"true\" />\n              Profile\n            </TabsTrigger>\n            <TabsTrigger value=\"preferences\" className=\"min-w-fit\">\n              <Languages className=\"mr-2 h-4 w-4\" aria-hidden=\"true\" />\n              Preferences\n            </TabsTrigger>\n            <TabsTrigger value=\"notifications\" className=\"min-w-fit\">\n              <Speech className=\"mr-2 h-4 w-4\" aria-hidden=\"true\" />\n              Notifications\n            </TabsTrigger>\n            <TabsTrigger value=\"privacy\" className=\"min-w-fit\">\n              <CircleQuestionMark className=\"mr-2 h-4 w-4\" aria-hidden=\"true\" />\n              Privacy\n            </TabsTrigger>\n            <TabsTrigger value=\"accessibility\" className=\"min-w-fit\">\n              <AccessibilityIcon className=\"mr-2 h-4 w-4\" aria-hidden=\"true\" />\n              Accessibility\n            </TabsTrigger>\n            <TabsTrigger value=\"support\" className=\"min-w-fit\">\n              <MessageCircleQuestionMark className=\"mr-2 h-4 w-4\" aria-hidden=\"true\" />\n              Support\n            </TabsTrigger>\n            <TabsTrigger value=\"account\" className=\"min-w-fit\">\n              <Monitor className=\"mr-2 h-4 w-4\" aria-hidden=\"true\" />\n              Account\n            </TabsTrigger>\n          </TabsList>\n        </div>\n\n        <TabsContent value=\"profile\" className=\"mt-6\">\n          <div className=\"grid grid-cols-1 gap-6\">\n            <Card className=\"bg-card\">\n              <CardHeader>\n                <CardTitle className={sectionTitle}>Profile</CardTitle>\n              </CardHeader>\n              <CardContent className=\"grid gap-6\">\n                <div className=\"flex items-center gap-4\">\n                  <Avatar className=\"h-16 w-16 rounded-xl\">\n                    <AvatarImage\n                      src={avatarUrl}\n                      alt={name ? `${name}'s avatar` : \"User avatar\"}\n                      className=\"object-cover\"\n                    />\n                    <AvatarFallback className=\"rounded-xl\">U</AvatarFallback>\n                  </Avatar>\n                  <div className=\"min-w-0\">\n                    <p className={labelMuted}>Avatar</p>\n                    <div className=\"flex items-center gap-3 mt-2\">\n                      <label htmlFor=\"avatar-upload\">\n                        <input\n                          id=\"avatar-upload\"\n                          type=\"file\"\n                          accept=\"image/*\"\n                          className=\"sr-only\"\n                          onChange={handleAvatarUpload}\n                        />\n                        <Button variant=\"secondary\" size=\"sm\" asChild={false} onClick={() => {\n                          const el = document.getElementById(\"avatar-upload\") as HTMLInputElement | null;\n                          el?.click();\n                        }}>\n                          Change\n                        </Button>\n                      </label>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => {\n                          setAvatarUrl(undefined);\n                          if (avatarObjectUrl) {\n                            URL.revokeObjectURL(avatarObjectUrl);\n                            setAvatarObjectUrl(null);\n                          }\n                        }}\n                      >\n                        Remove\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"grid gap-4 sm:grid-cols-2\">\n                  <div className=\"grid gap-2\">\n                    <Label htmlFor=\"name\">Full name</Label>\n                    <Input\n                      id=\"name\"\n                      placeholder=\"Enter your name\"\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                      className=\"bg-background\"\n                    />\n                  </div>\n                  <div className=\"grid gap-2\">\n                    <Label htmlFor=\"email\">Email</Label>\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      placeholder=\"you@example.com\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      className=\"bg-background\"\n                    />\n                  </div>\n                  <div className=\"grid gap-2\">\n                    <Label htmlFor=\"phone\">Phone</Label>\n                    <Input\n                      id=\"phone\"\n                      type=\"tel\"\n                      placeholder=\"+91 98765 43210\"\n                      value={phone}\n                      onChange={(e) => setPhone(e.target.value)}\n                      className=\"bg-background\"\n                    />\n                  </div>\n                </div>\n                <div className=\"flex justify-end\">\n                  <Button onClick={handleProfileSave}>Save changes</Button>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"bg-card\">\n              <CardHeader>\n                <CardTitle className={sectionTitle}>Security</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <form onSubmit={handlePasswordChange} className=\"grid gap-4 sm:grid-cols-3\">\n                  <div className=\"grid gap-2\">\n                    <Label htmlFor=\"currentPassword\">Current password</Label>\n                    <Input id=\"currentPassword\" name=\"currentPassword\" type=\"password\" className=\"bg-background\" />\n                  </div>\n                  <div className=\"grid gap-2\">\n                    <Label htmlFor=\"newPassword\">New password</Label>\n                    <Input id=\"newPassword\" name=\"newPassword\" type=\"password\" className=\"bg-background\" />\n                    <p className=\"text-xs text-muted-foreground\">At least 8 characters.</p>\n                  </div>\n                  <div className=\"grid gap-2\">\n                    <Label htmlFor=\"confirmPassword\">Confirm new password</Label>\n                    <Input id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" className=\"bg-background\" />\n                  </div>\n                  <div className=\"sm:col-span-3 flex justify-end pt-2\">\n                    <Button type=\"submit\">Update password</Button>\n                  </div>\n                </form>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"preferences\" className=\"mt-6\">\n          <div className=\"grid grid-cols-1 gap-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className={sectionTitle}>Language & Region</CardTitle>\n              </CardHeader>\n              <CardContent className=\"grid gap-4 sm:grid-cols-2\">\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"language\">Language</Label>\n                  <Select\n                    value={language}\n                    onValueChange={(v) => handleLanguageChange(v as LanguageCode)}\n                  >\n                    <SelectTrigger id=\"language\" className=\"bg-background\">\n                      <SelectValue placeholder=\"Select language\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {languageOptions.map((opt) => (\n                        <SelectItem key={opt.code} value={opt.code}>\n                          {opt.label} — {opt.native}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                  <p className=\"text-xs text-muted-foreground\">\n                    Interface updates immediately after selection.\n                  </p>\n                </div>\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"content-language\">Content language preference</Label>\n                  <Select\n                    onValueChange={(v) => {\n                      toast.message(\"Content language set\", { description: v.toUpperCase() });\n                    }}\n                  >\n                    <SelectTrigger id=\"content-language\" className=\"bg-background\">\n                      <SelectValue placeholder=\"Follow interface\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {languageOptions.map((opt) => (\n                        <SelectItem key={opt.code} value={opt.code}>\n                          {opt.label} — {opt.native}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle className={sectionTitle}>Data & Sync</CardTitle>\n              </CardHeader>\n              <CardContent className=\"grid gap-4\">\n                <SettingRow\n                  label=\"Offline mode\"\n                  description=\"Use LearnQuest without internet. Content is cached and syncs when online.\"\n                  checked={sync.offlineMode}\n                  onCheckedChange={(val) => setSync((s) => ({ ...s, offlineMode: val }))}\n                />\n                <SettingRow\n                  label=\"Auto sync on Wi‑Fi\"\n                  description=\"Sync downloads and progress automatically on Wi‑Fi.\"\n                  checked={sync.autoSyncOnWifi}\n                  onCheckedChange={(val) => setSync((s) => ({ ...s, autoSyncOnWifi: val }))}\n                />\n                <SettingRow\n                  label=\"Data saver\"\n                  description=\"Lower data usage by reducing media quality and prefetching.\"\n                  checked={sync.dataSaver}\n                  onCheckedChange={(val) => setSync((s) => ({ ...s, dataSaver: val }))}\n                />\n                <div className=\"flex justify-end pt-2\">\n                  <Button\n                    variant=\"secondary\"\n                    onClick={() => toast.success(\"Sync settings saved\")}\n                  >\n                    Save sync settings\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"notifications\" className=\"mt-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle className={sectionTitle}>Notification Preferences</CardTitle>\n            </CardHeader>\n            <CardContent className=\"grid gap-4\">\n              <SettingRow\n                label=\"Email updates\"\n                description=\"Announcements, class updates, and progress reports.\"\n                checked={notif.email}\n                onCheckedChange={(val) => setNotif((n) => ({ ...n, email: val }))}\n              />\n              <SettingRow\n                label=\"SMS alerts\"\n                description=\"Receive important alerts via text message.\"\n                checked={notif.sms}\n                onCheckedChange={(val) => setNotif((n) => ({ ...n, sms: val }))}\n              />\n              <SettingRow\n                label=\"Push notifications\"\n                description=\"Real-time updates on assignments and achievements.\"\n                checked={notif.push}\n                onCheckedChange={(val) => setNotif((n) => ({ ...n, push: val }))}\n              />\n              <Separator />\n              <SettingRow\n                label=\"Weekly digest\"\n                description=\"Summary of your learning progress every week.\"\n                checked={notif.weeklyDigest}\n                onCheckedChange={(val) => setNotif((n) => ({ ...n, weeklyDigest: val }))}\n              />\n              <SettingRow\n                label=\"Reminders\"\n                description=\"Reminders for due tasks and upcoming classes.\"\n                checked={notif.reminders}\n                onCheckedChange={(val) => setNotif((n) => ({ ...n, reminders: val }))}\n              />\n              <div className=\"flex justify-end pt-2\">\n                <Button onClick={() => toast.success(\"Notification preferences saved\")}>\n                  Save preferences\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"privacy\" className=\"mt-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle className={sectionTitle}>Privacy Controls</CardTitle>\n            </CardHeader>\n            <CardContent className=\"grid gap-6\">\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"visibility\">Profile visibility</Label>\n                <Select\n                  value={privacy.profileVisibility}\n                  onValueChange={(v) =>\n                    setPrivacy((p) => ({ ...p, profileVisibility: v as PrivacyPrefs[\"profileVisibility\"] }))\n                  }\n                >\n                  <SelectTrigger id=\"visibility\" className=\"bg-background\">\n                    <SelectValue placeholder=\"Select visibility\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"everyone\">Everyone</SelectItem>\n                    <SelectItem value=\"classmates\">Classmates</SelectItem>\n                    <SelectItem value=\"only-me\">Only me</SelectItem>\n                  </SelectContent>\n                </Select>\n                <p className=\"text-xs text-muted-foreground\">\n                  Control who can see your profile and achievements.\n                </p>\n              </div>\n              <SettingRow\n                label=\"Share anonymized analytics\"\n                description=\"Help us improve by sharing usage metrics without personal data.\"\n                checked={privacy.analyticsSharing}\n                onCheckedChange={(val) => setPrivacy((p) => ({ ...p, analyticsSharing: val }))}\n              />\n              <SettingRow\n                label=\"Content filtering\"\n                description=\"Hide sensitive or distracting content where possible.\"\n                checked={privacy.contentFiltering}\n                onCheckedChange={(val) => setPrivacy((p) => ({ ...p, contentFiltering: val }))}\n              />\n              <div className=\"flex justify-end\">\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => toast.success(\"Privacy settings saved\")}\n                >\n                  Save privacy settings\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"accessibility\" className=\"mt-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle className={sectionTitle}>Accessibility Options</CardTitle>\n            </CardHeader>\n            <CardContent className=\"grid gap-4\">\n              <SettingRow\n                label=\"High contrast\"\n                description=\"Improve readability with higher contrast colors.\"\n                checked={a11y.highContrast}\n                onCheckedChange={(val) => setA11y((s) => ({ ...s, highContrast: val }))}\n              />\n              <SettingRow\n                label=\"Large text\"\n                description=\"Increase text size for better legibility.\"\n                checked={a11y.largeText}\n                onCheckedChange={(val) => setA11y((s) => ({ ...s, largeText: val }))}\n              />\n              <SettingRow\n                label=\"Reduce motion\"\n                description=\"Minimize animations and transitions.\"\n                checked={a11y.reduceMotion}\n                onCheckedChange={(val) => setA11y((s) => ({ ...s, reduceMotion: val }))}\n              />\n              <SettingRow\n                label=\"Captions\"\n                description=\"Show captions for audio/video where available.\"\n                checked={a11y.captions}\n                onCheckedChange={(val) => setA11y((s) => ({ ...s, captions: val }))}\n              />\n              <SettingRow\n                label=\"Screen reader hints\"\n                description=\"Provide additional descriptions for assistive tech.\"\n                checked={a11y.screenReaderHints}\n                onCheckedChange={(val) => setA11y((s) => ({ ...s, screenReaderHints: val }))}\n              />\n              <div className=\"flex justify-end\">\n                <Button\n                  onClick={() => toast.success(\"Accessibility preferences saved\")}\n                >\n                  Save accessibility\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"support\" className=\"mt-6\">\n          <div className=\"grid grid-cols-1 gap-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className={sectionTitle}>Find Answers</CardTitle>\n              </CardHeader>\n              <CardContent className=\"grid gap-4\">\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"faq-search\" className=\"sr-only\">Search help</Label>\n                  <div className=\"flex items-center gap-2\">\n                    <Input\n                      id=\"faq-search\"\n                      placeholder=\"Search FAQs (e.g., offline, password, video)\"\n                      value={faqQuery}\n                      onChange={(e) => setFaqQuery(e.target.value)}\n                      className=\"bg-background\"\n                    />\n                    <Button\n                      variant=\"secondary\"\n                      onClick={() => {\n                        const first = filteredFaqs[0];\n                        if (first) {\n                          toast.message(\"Top result\", { description: first.q });\n                        } else {\n                          toast.message(\"No results\", { description: \"Try a different keyword.\" });\n                        }\n                      }}\n                    >\n                      Search\n                    </Button>\n                  </div>\n                </div>\n                <Accordion type=\"single\" collapsible className=\"w-full\">\n                  {filteredFaqs.map((item, idx) => (\n                    <AccordionItem key={idx} value={`faq-${idx}`}>\n                      <AccordionTrigger className=\"text-left\">{item.q}</AccordionTrigger>\n                      <AccordionContent>\n                        <p className=\"text-sm leading-relaxed\">{item.a}</p>\n                      </AccordionContent>\n                    </AccordionItem>\n                  ))}\n                </Accordion>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle className={sectionTitle}>AI Chat Support</CardTitle>\n              </CardHeader>\n              <CardContent className=\"grid gap-3\">\n                <p className=\"text-sm text-muted-foreground\">\n                  Ask a quick question. Our assistant will guide you to the right resource.\n                </p>\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"chat-question\" className=\"sr-only\">Your question</Label>\n                  <Textarea\n                    id=\"chat-question\"\n                    placeholder=\"Type your question here...\"\n                    className=\"bg-background min-h-24\"\n                    onKeyDown={(e) => {\n                      if (e.key === \"Enter\" && (e.ctrlKey || e.metaKey)) {\n                        e.preventDefault();\n                        toast.info(\"Sending to AI assistant…\");\n                      }\n                    }}\n                  />\n                </div>\n                <div className=\"flex justify-end gap-2\">\n                  <Button\n                    variant=\"secondary\"\n                    onClick={() => toast.info(\"Sending to AI assistant…\")}\n                  >\n                    Ask\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle className={sectionTitle}>Contact Support</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <form onSubmit={handleContactSubmit} className=\"grid gap-4\">\n                  <div className=\"grid gap-2\">\n                    <Label htmlFor=\"category\">Category</Label>\n                    <Select\n                      value={contactCategory}\n                      onValueChange={(v) => setContactCategory(v as typeof contactCategory)}\n                    >\n                      <SelectTrigger id=\"category\" className=\"bg-background\">\n                        <SelectValue placeholder=\"Choose a category\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"technical\">Technical</SelectItem>\n                        <SelectItem value=\"billing\">Billing</SelectItem>\n                        <SelectItem value=\"feedback\">Feedback</SelectItem>\n                        <SelectItem value=\"other\">Other</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div className=\"grid gap-2\">\n                    <Label htmlFor=\"message\">Message</Label>\n                    <Textarea\n                      id=\"message\"\n                      value={contactMessage}\n                      onChange={(e) => setContactMessage(e.target.value)}\n                      placeholder=\"Describe your issue or question\"\n                      className=\"bg-background min-h-28\"\n                    />\n                  </div>\n                  <div className=\"flex justify-end\">\n                    <Button type=\"submit\">Send message</Button>\n                  </div>\n                </form>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle className={sectionTitle}>Troubleshooting</CardTitle>\n              </CardHeader>\n              <CardContent className=\"grid gap-6\">\n                <div>\n                  <div className=\"flex items-center gap-2 mb-2\">\n                    <LaptopMinimal className=\"h-4 w-4\" aria-hidden=\"true\" />\n                    <h4 className=\"font-medium\">Rural Connectivity Tips</h4>\n                  </div>\n                  <ul className=\"list-disc pl-5 space-y-1 text-sm\">\n                    <li>Enable Offline Mode and Data Saver in Preferences.</li>\n                    <li>Download lessons when connected to Wi‑Fi (school or community center).</li>\n                    <li>Prefer text-based lessons; reduce motion and media quality.</li>\n                    <li>Sync progress during low-traffic hours (early morning/late night).</li>\n                  </ul>\n                </div>\n                <div>\n                  <div className=\"flex items-center gap-2 mb-2\">\n                    <Monitor className=\"h-4 w-4\" aria-hidden=\"true\" />\n                    <h4 className=\"font-medium\">Device Compatibility</h4>\n                  </div>\n                  <ul className=\"list-disc pl-5 space-y-1 text-sm\">\n                    <li>Update your device OS and browser to the latest version available.</li>\n                    <li>Enable storage permissions to allow content downloads.</li>\n                    <li>If videos stutter, lower quality or use captions-only mode.</li>\n                    <li>Clear app cache if UI feels slow; restart the app.</li>\n                  </ul>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"account\" className=\"mt-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle className={sectionTitle}>Account Management</CardTitle>\n            </CardHeader>\n            <CardContent className=\"grid gap-4\">\n              <p className=\"text-sm text-muted-foreground\">\n                Manage your account and export or delete your data.\n              </p>\n              <div className=\"flex flex-wrap gap-3\">\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => toast.message(\"Export requested\", { description: \"We’ll email your data export.\" })}\n                >\n                  Export my data\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  onClick={() =>\n                    toast.info(\"Sign out\", { description: \"You have been signed out on this device.\" })\n                  }\n                >\n                  Sign out\n                </Button>\n                <Button\n                  variant=\"destructive\"\n                  onClick={() =>\n                    toast(\"Confirm deletion\", {\n                      description: \"Please contact support to permanently delete your account.\",\n                    })\n                  }\n                >\n                  Delete account\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </section>\n  );\n}\n\nfunction SettingRow({\n  label,\n  description,\n  checked,\n  onCheckedChange,\n}: {\n  label: string;\n  description?: string;\n  checked: boolean;\n  onCheckedChange: (checked: boolean) => void;\n}) {\n  return (\n    <div className=\"flex items-start justify-between gap-4 p-3 rounded-xl bg-secondary/40\">\n      <div className=\"min-w-0\">\n        <p className=\"text-sm font-medium leading-6\">{label}</p>\n        {description ? (\n          <p className=\"text-xs text-muted-foreground mt-0.5\">{description}</p>\n        ) : null}\n      </div>\n      <Switch\n        checked={checked}\n        onCheckedChange={onCheckedChange}\n        aria-label={label}\n      />\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}