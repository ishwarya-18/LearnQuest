{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mjeyl/OneDrive/Documents/LearnQuest/frontend/src/components/AuthenticationFlow.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { toast } from \"sonner\"\r\nimport {\r\n  UserRoundPlus,\r\n  LogIn,\r\n  CircleUserRound,\r\n  IdCard,\r\n  KeyRound,\r\n  User,\r\n} from \"lucide-react\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport {\r\n  Tabs,\r\n  TabsContent,\r\n  TabsList,\r\n  TabsTrigger,\r\n} from \"@/components/ui/tabs\"\r\nimport {\r\n  Select,\r\n  SelectTrigger,\r\n  SelectValue,\r\n  SelectContent,\r\n  SelectItem,\r\n} from \"@/components/ui/select\"\r\n\r\ntype Role = \"student\" | \"teacher\" | \"admin\"\r\ntype AuthMode = \"login\" | \"signup\"\r\ntype Method = \"phone\" | \"email\"\r\n\r\ninterface AuthenticationFlowProps {\r\n  className?: string\r\n  initialRole?: Role\r\n  defaultMode?: AuthMode\r\n  onComplete?: (payload: {\r\n    role: Role\r\n    authMode: AuthMode\r\n    method: Method\r\n    user: {\r\n      name: string\r\n      grade?: string\r\n      language: string\r\n      avatarUrl?: string\r\n    }\r\n    contact: { phone?: string; email?: string }\r\n  }) => void\r\n}\r\n\r\nconst avatarOptions: { id: string; url: string; alt: string }[] = [\r\n  {\r\n    id: \"av1\",\r\n    url: \"https://images.unsplash.com/photo-1544005313-94ddf0286df2?q=80&w=300&auto=format&fit=crop\",\r\n    alt: \"Smiling student\",\r\n  },\r\n  {\r\n    id: \"av2\",\r\n    url: \"https://images.unsplash.com/photo-1527980965255-d3b416303d12?q=80&w=300&auto=format&fit=crop\",\r\n    alt: \"Boy with backpack\",\r\n  },\r\n  {\r\n    id: \"av3\",\r\n    url: \"https://images.unsplash.com/photo-1547425260-76bcadfb4f2c?q=80&w=300&auto=format&fit=crop\",\r\n    alt: \"Smiling teacher\",\r\n  },\r\n  {\r\n    id: \"av4\",\r\n    url: \"https://images.unsplash.com/photo-1531123897727-8f129e1688ce?q=80&w=300&auto=format&fit=crop\",\r\n    alt: \"Happy learner\",\r\n  },\r\n  {\r\n    id: \"av5\",\r\n    url: \"https://images.unsplash.com/photo-1463453091185-61582044d556?q=80&w=300&auto=format&fit=crop\",\r\n    alt: \"Man in blue jacket\",\r\n  },\r\n  {\r\n    id: \"av6\",\r\n    url: \"https://images.unsplash.com/photo-1529665253569-6d01c0eaf7b6?q=80&w=300&auto=format&fit=crop\",\r\n    alt: \"Young adult portrait\",\r\n  },\r\n]\r\n\r\nconst grades = [\r\n  { value: \"grade-1\", label: \"Class 1\" },\r\n  { value: \"grade-2\", label: \"Class 2\" },\r\n  { value: \"grade-3\", label: \"Class 3\" },\r\n  { value: \"grade-4\", label: \"Class 4\" },\r\n  { value: \"grade-5\", label: \"Class 5\" },\r\n  { value: \"grade-6\", label: \"Class 6\" },\r\n  { value: \"grade-7\", label: \"Class 7\" },\r\n  { value: \"grade-8\", label: \"Class 8\" },\r\n  { value: \"grade-9\", label: \"Class 9\" },\r\n  { value: \"grade-10\", label: \"Class 10\" },\r\n  { value: \"grade-11\", label: \"Class 11\" },\r\n  { value: \"grade-12\", label: \"Class 12\" },\r\n]\r\n\r\nconst languages = [\r\n  { value: \"en\", label: \"English\" },\r\n  { value: \"hi\", label: \"हिंदी (Hindi)\" },\r\n  { value: \"bn\", label: \"বাংলা (Bengali)\" },\r\n  { value: \"te\", label: \"తెలుగు (Telugu)\" },\r\n  { value: \"ta\", label: \"தமிழ் (Tamil)\" },\r\n  { value: \"mr\", label: \"मराठी (Marathi)\" },\r\n]\r\n\r\ntype Step = \"role\" | \"auth\" | \"verify\" | \"profile\"\r\n\r\nexport default function AuthenticationFlow({\r\n  className,\r\n  initialRole = \"student\",\r\n  defaultMode = \"signup\",\r\n  onComplete,\r\n}: AuthenticationFlowProps) {\r\n  const [step, setStep] = React.useState<Step>(\"role\")\r\n  const [role, setRole] = React.useState<Role>(initialRole)\r\n  const [authMode, setAuthMode] = React.useState<AuthMode>(defaultMode)\r\n  const [method, setMethod] = React.useState<Method>(\"phone\")\r\n\r\n  // Contact info\r\n  const [phone, setPhone] = React.useState(\"\")\r\n  const [email, setEmail] = React.useState(\"\")\r\n  const [password, setPassword] = React.useState(\"\")\r\n\r\n  // OTP\r\n  const [otp, setOtp] = React.useState(\"\")\r\n  const [otpSent, setOtpSent] = React.useState(false)\r\n\r\n  // Profile\r\n  const [name, setName] = React.useState(\"\")\r\n  const [grade, setGrade] = React.useState<string | undefined>(undefined)\r\n  const [language, setLanguage] = React.useState<string | undefined>(undefined)\r\n  const [avatar, setAvatar] = React.useState<string | undefined>(undefined)\r\n\r\n  // UI states\r\n  const [loading, setLoading] = React.useState(false)\r\n  const [error, setError] = React.useState<string | null>(null)\r\n\r\n  React.useEffect(() => {\r\n    // Reset downstream state when mode/method changes\r\n    setError(null)\r\n  }, [authMode, method])\r\n\r\n  function validateContact(): boolean {\r\n   if (method === \"phone\") {\r\n  const cleaned = phone.replace(/\\D/g, \"\")\r\n  if (cleaned.length !== 10) {\r\n    setError(\"Please enter a valid 10-digit phone number.\")\r\n    return false\r\n  }\r\n  return true\r\n} else {\r\n      const isValid = /^\\S+@\\S+\\.\\S+$/.test(email)\r\n      if (!isValid) {\r\n        setError(\"Please enter a valid email address.\")\r\n        return false\r\n      }\r\n      if (authMode === \"login\" && password.length < 6) {\r\n        setError(\"Password should be at least 6 characters.\")\r\n        return false\r\n      }\r\n      if (authMode === \"signup\" && password && password.length < 6) {\r\n        setError(\"If you set a password, use at least 6 characters.\")\r\n        return false\r\n      }\r\n      return true\r\n    }\r\n  }\r\n\r\n  function nextFromRole() {\r\n    setStep(\"auth\")\r\n  }\r\n\r\n  async function handleSendCode() {\r\n    setError(null)\r\n    if (!validateContact()) {\r\n      toast.error(\"Fix the highlighted fields\")\r\n      return\r\n    }\r\n    setLoading(true)\r\n    // Simulate API call\r\n    setTimeout(() => {\r\n      setLoading(false)\r\n      setOtpSent(true)\r\n      setStep(\"verify\")\r\n      toast.success(\"OTP sent to your phone\")\r\n    }, 900)\r\n  }\r\n\r\n  async function handleVerify() {\r\n    setError(null)\r\n    if (method === \"phone\") {\r\n      if (otp.replace(/\\D/g, \"\").length !== 6) {\r\n        setError(\"Enter the 6-digit code.\")\r\n        return\r\n      }\r\n    } else {\r\n      if (authMode === \"login\") {\r\n        // Email + password\r\n        if (!validateContact()) return\r\n      } else {\r\n        // Email signup uses verification optional in this simplified flow\r\n        if (!validateContact()) return\r\n      }\r\n    }\r\n\r\n    setLoading(true)\r\n    setTimeout(() => {\r\n      setLoading(false)\r\n      if (authMode === \"login\") {\r\n        // Login complete: skip profile if we pretend profile exists\r\n        toast.success(\"Welcome back!\")\r\n        onComplete?.({\r\n          role,\r\n          authMode,\r\n          method,\r\n          user: {\r\n            name: \"Learner\",\r\n            language: language || \"en\",\r\n            grade,\r\n            avatarUrl: avatar,\r\n          },\r\n          contact: { phone, email },\r\n        })\r\n      } else {\r\n        // Proceed to profile setup for signup\r\n        setStep(\"profile\")\r\n        toast.success(\"Account created. Set up your profile.\")\r\n      }\r\n    }, 900)\r\n  }\r\n\r\n  function handleEmailLogin() {\r\n    setError(null)\r\n    if (!validateContact()) {\r\n      toast.error(\"Fix the highlighted fields\")\r\n      return\r\n    }\r\n    setLoading(true)\r\n    setTimeout(() => {\r\n      setLoading(false)\r\n      toast.success(\"Logged in successfully\")\r\n      onComplete?.({\r\n        role,\r\n        authMode: \"login\",\r\n        method: \"email\",\r\n        user: { name: \"Learner\", language: \"en\", grade, avatarUrl: avatar },\r\n        contact: { email },\r\n      })\r\n    }, 900)\r\n  }\r\n\r\n  async function handleProfileComplete() {\r\n    setError(null)\r\n    if (!name.trim()) {\r\n      setError(\"Please enter your full name.\")\r\n      return\r\n    }\r\n    if (role === \"student\" && !grade) {\r\n      setError(\"Please select your class.\")\r\n      return\r\n    }\r\n    if (!language) {\r\n      setError(\"Please choose your preferred language.\")\r\n      return\r\n    }\r\n    setLoading(true)\r\n    setTimeout(() => {\r\n      setLoading(false)\r\n      toast.success(\"Profile saved\")\r\n      onComplete?.({\r\n        role,\r\n        authMode,\r\n        method,\r\n        user: {\r\n          name: name.trim(),\r\n          grade,\r\n          language,\r\n          avatarUrl: avatar,\r\n        },\r\n        contact: { phone, email },\r\n      })\r\n    }, 900)\r\n  }\r\n\r\n  function resetToStart() {\r\n    setStep(\"role\")\r\n    setAuthMode(defaultMode)\r\n    setMethod(\"phone\")\r\n    setPhone(\"\")\r\n    setEmail(\"\")\r\n    setPassword(\"\")\r\n    setOtp(\"\")\r\n    setOtpSent(false)\r\n    setName(\"\")\r\n    setGrade(undefined)\r\n    setLanguage(undefined)\r\n    setAvatar(undefined)\r\n    setError(null)\r\n  }\r\n\r\n  return (\r\n    <section\r\n      className={cn(\r\n        \"w-full max-w-full\",\r\n        \"bg-card text-foreground rounded-2xl border border-border\",\r\n        \"shadow-sm\",\r\n        \"p-4 sm:p-6 md:p-8\",\r\n        className\r\n      )}\r\n      aria-label=\"Authentication flow\"\r\n    >\r\n      <header className=\"mb-4 sm:mb-6\">\r\n        <div className=\"flex items-center gap-3\">\r\n          <div className=\"inline-flex h-11 w-11 shrink-0 items-center justify-center rounded-xl bg-accent text-primary\">\r\n            {authMode === \"signup\" ? (\r\n              <UserRoundPlus className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n            ) : (\r\n              <LogIn className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n            )}\r\n          </div>\r\n          <div className=\"min-w-0\">\r\n            <h3 className=\"text-xl sm:text-2xl font-bold truncate\">\r\n              {authMode === \"signup\" ? \"Create your account\" : \"Welcome back\"}\r\n            </h3>\r\n            <p className=\"text-sm text-muted-foreground\">\r\n              LearnQuest • Simple, secure sign in for rural education\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"grid gap-6\">\r\n        {/* Mode Switch */}\r\n        <div className=\"flex flex-col gap-2\">\r\n          <Label className=\"text-sm font-medium\">I want to</Label>\r\n          <div className=\"inline-flex w-full overflow-hidden rounded-xl border border-border bg-secondary p-1\">\r\n            <button\r\n              type=\"button\"\r\n              aria-pressed={authMode === \"signup\"}\r\n              onClick={() => setAuthMode(\"signup\")}\r\n              className={cn(\r\n                \"flex-1 rounded-lg px-3 py-2.5 text-center text-sm font-medium transition\",\r\n                authMode === \"signup\"\r\n                  ? \"bg-card text-foreground shadow-sm\"\r\n                  : \"text-muted-foreground hover:text-foreground\"\r\n              )}\r\n            >\r\n              Create account\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              aria-pressed={authMode === \"login\"}\r\n              onClick={() => setAuthMode(\"login\")}\r\n              className={cn(\r\n                \"flex-1 rounded-lg px-3 py-2.5 text-center text-sm font-medium transition\",\r\n                authMode === \"login\"\r\n                  ? \"bg-card text-foreground shadow-sm\"\r\n                  : \"text-muted-foreground hover:text-foreground\"\r\n              )}\r\n            >\r\n              Sign in\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Step indicators */}\r\n        <nav\r\n          className=\"flex items-center gap-2\"\r\n          aria-label=\"Progress\"\r\n        >\r\n          {[\"role\", \"auth\", authMode === \"login\" ? \"verify\" : \"verify\", \"profile\"].map(\r\n            (s, idx) => {\r\n              const isActive =\r\n                step === (s as Step) ||\r\n                (step === \"verify\" && s === \"auth\" && method === \"email\" && authMode === \"login\")\r\n              const isDone =\r\n                [\"auth\", \"verify\", \"profile\"].indexOf(step) >= 0 &&\r\n                [\"role\", \"auth\"].includes(s)\r\n              const label =\r\n                s === \"role\"\r\n                  ? \"Role\"\r\n                  : s === \"auth\"\r\n                  ? \"Contact\"\r\n                  : s === \"verify\"\r\n                  ? method === \"phone\"\r\n                    ? \"OTP\"\r\n                    : \"Password\"\r\n                  : \"Profile\"\r\n              return (\r\n                <div\r\n                  key={s}\r\n                  className={cn(\r\n                    \"flex items-center gap-2\",\r\n                    idx > 0 && \"min-w-0\"\r\n                  )}\r\n                >\r\n                  {idx > 0 && (\r\n                    <div className=\"h-[2px] w-4 sm:w-6 bg-border\" aria-hidden=\"true\" />\r\n                  )}\r\n                  <div\r\n                    className={cn(\r\n                      \"inline-flex items-center gap-2 rounded-full border px-3 py-1.5\",\r\n                      isActive\r\n                        ? \"bg-accent border-border\"\r\n                        : isDone\r\n                        ? \"bg-secondary border-border\"\r\n                        : \"bg-card border-border\"\r\n                    )}\r\n                  >\r\n                    <span className=\"text-xs font-medium\">{label}</span>\r\n                  </div>\r\n                </div>\r\n              )\r\n            }\r\n          )}\r\n        </nav>\r\n\r\n        {/* Steps */}\r\n        {step === \"role\" && (\r\n          <div\r\n            className=\"grid gap-4 animate-in fade-in-50\"\r\n            role=\"group\"\r\n            aria-labelledby=\"role-label\"\r\n          >\r\n            <Label id=\"role-label\" className=\"text-base font-semibold\">\r\n              Choose your role\r\n            </Label>\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-3\">\r\n              <RoleCard\r\n                icon={<CircleUserRound className=\"h-7 w-7\" aria-hidden=\"true\" />}\r\n                title=\"Student\"\r\n                description=\"Learn with quests and earn rewards\"\r\n                active={role === \"student\"}\r\n                onClick={() => setRole(\"student\")}\r\n                ariaLabel=\"Select Student role\"\r\n              />\r\n              <RoleCard\r\n                icon={<IdCard className=\"h-7 w-7\" aria-hidden=\"true\" />}\r\n                title=\"Teacher\"\r\n                description=\"Manage classes and track progress\"\r\n                active={role === \"teacher\"}\r\n                onClick={() => setRole(\"teacher\")}\r\n                ariaLabel=\"Select Teacher role\"\r\n              />\r\n              <RoleCard\r\n                icon={<User className=\"h-7 w-7\" aria-hidden=\"true\" />}\r\n                title=\"Admin\"\r\n                description=\"Oversee content and users\"\r\n                active={role === \"admin\"}\r\n                onClick={() => setRole(\"admin\")}\r\n                ariaLabel=\"Select Admin role\"\r\n              />\r\n            </div>\r\n            <div className=\"flex items-center justify-between gap-3 pt-1\">\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                You can change role later if needed.\r\n              </p>\r\n              <Button\r\n                onClick={nextFromRole}\r\n                className=\"min-w-[120px]\"\r\n                aria-label=\"Continue to contact step\"\r\n              >\r\n                Continue\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {step === \"auth\" && (\r\n          <div className=\"grid gap-5 animate-in fade-in-50\">\r\n            <div className=\"grid gap-2\">\r\n              <Label className=\"text-base font-semibold\">\r\n                Choose sign {authMode === \"signup\" ? \"up\" : \"in\"} method\r\n              </Label>\r\n              <Tabs\r\n                defaultValue={method}\r\n                value={method}\r\n                onValueChange={(v) => setMethod(v as Method)}\r\n                className=\"w-full\"\r\n              >\r\n                <TabsList className=\"grid w-full grid-cols-2 rounded-xl bg-secondary p-1\">\r\n                  <TabsTrigger\r\n                    value=\"phone\"\r\n                    className=\"rounded-lg text-sm data-[state=active]:bg-card data-[state=active]:shadow-sm\"\r\n                  >\r\n                    Phone\r\n                  </TabsTrigger>\r\n                  <TabsTrigger\r\n                    value=\"email\"\r\n                    className=\"rounded-lg text-sm data-[state=active]:bg-card data-[state=active]:shadow-sm\"\r\n                  >\r\n                    Email\r\n                  </TabsTrigger>\r\n                </TabsList>\r\n\r\n                <TabsContent value=\"phone\" className=\"mt-4\">\r\n                  <div className=\"grid gap-3\">\r\n                    <div className=\"grid gap-2\">\r\n                      <Label htmlFor=\"phone\">Phone number</Label>\r\n                      <Input\r\n                        id=\"phone\"\r\n                        inputMode=\"tel\"\r\n                        autoComplete=\"tel\"\r\n                        placeholder=\"Enter 10-digit phone\"\r\n                        value={phone}\r\n                        onChange={(e) => setPhone(e.target.value)}\r\n                        className=\"h-12 text-base\"\r\n                        aria-invalid={!!error && method === \"phone\"}\r\n                      />\r\n                    </div>\r\n                    <Button\r\n                      className=\"h-12 text-base\"\r\n                      onClick={handleSendCode}\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? \"Sending...\" : \"Send OTP\"}\r\n                    </Button>\r\n                    <p className=\"text-xs text-muted-foreground\">\r\n                      We’ll send a 6-digit code via SMS for quick access.\r\n                    </p>\r\n                  </div>\r\n                </TabsContent>\r\n\r\n                <TabsContent value=\"email\" className=\"mt-4\">\r\n                  <div className=\"grid gap-3\">\r\n                    <div className=\"grid gap-2\">\r\n                      <Label htmlFor=\"email\">Email</Label>\r\n                      <Input\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        autoComplete=\"email\"\r\n                        placeholder=\"you@example.com\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        className=\"h-12 text-base\"\r\n                        aria-invalid={!!error && method === \"email\"}\r\n                      />\r\n                    </div>\r\n                    <div className=\"grid gap-2\">\r\n                      <Label htmlFor=\"password\">\r\n                        {authMode === \"login\" ? \"Password\" : \"Set a password (optional)\"}\r\n                      </Label>\r\n                      <div className=\"relative\">\r\n                        <KeyRound className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-muted-foreground pointer-events-none\" />\r\n                        <Input\r\n                          id=\"password\"\r\n                          type=\"password\"\r\n                          autoComplete={authMode === \"login\" ? \"current-password\" : \"new-password\"}\r\n                          placeholder={authMode === \"login\" ? \"Enter your password\" : \"Create a password\"}\r\n                          value={password}\r\n                          onChange={(e) => setPassword(e.target.value)}\r\n                          className=\"h-12 text-base pl-11\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    {authMode === \"login\" ? (\r\n                      <Button\r\n                        className=\"h-12 text-base\"\r\n                        onClick={handleEmailLogin}\r\n                        disabled={loading}\r\n                      >\r\n                        {loading ? \"Signing in...\" : \"Sign in with Email\"}\r\n                      </Button>\r\n                    ) : (\r\n                      <Button\r\n                        className=\"h-12 text-base\"\r\n                        onClick={() => {\r\n                          // For email signup, proceed to profile directly\r\n                          if (!validateContact()) {\r\n                            toast.error(\"Fix the highlighted fields\")\r\n                            return\r\n                          }\r\n                          setStep(\"profile\")\r\n                          toast.success(\"Account created. Set up your profile.\")\r\n                        }}\r\n                        disabled={loading}\r\n                      >\r\n                        {loading ? \"Creating...\" : \"Continue\"}\r\n                      </Button>\r\n                    )}\r\n                    <p className=\"text-xs text-muted-foreground\">\r\n                      Your information is secure and will never be shared.\r\n                    </p>\r\n                  </div>\r\n                </TabsContent>\r\n              </Tabs>\r\n            </div>\r\n\r\n            {!!error && (\r\n              <div\r\n                className=\"rounded-lg border border-destructive/20 bg-destructive/5 px-3 py-2 text-sm text-destructive\"\r\n                role=\"alert\"\r\n              >\r\n                {error}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"text-sm text-muted-foreground hover:text-foreground underline underline-offset-4\"\r\n                onClick={resetToStart}\r\n              >\r\n                Change role\r\n              </button>\r\n              {method === \"phone\" && otpSent && (\r\n                <Button\r\n                  variant=\"secondary\"\r\n                  onClick={() => setStep(\"verify\")}\r\n                  className=\"h-10\"\r\n                >\r\n                  Enter OTP\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {step === \"verify\" && (\r\n          <div className=\"grid gap-5 animate-in fade-in-50\">\r\n            {method === \"phone\" ? (\r\n              <div className=\"grid gap-3\">\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"otp\">Enter 6-digit OTP</Label>\r\n                  <Input\r\n                    id=\"otp\"\r\n                    inputMode=\"numeric\"\r\n                    pattern=\"[0-9]*\"\r\n                    maxLength={6}\r\n                    placeholder=\"••••••\"\r\n                    value={otp}\r\n                    onChange={(e) => setOtp(e.target.value.replace(/\\D/g, \"\"))}\r\n                    className=\"h-12 text-center tracking-[0.3em] text-lg font-medium\"\r\n                    aria-invalid={!!error}\r\n                  />\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"text-sm text-muted-foreground hover:text-foreground underline underline-offset-4\"\r\n                    onClick={handleSendCode}\r\n                    disabled={loading}\r\n                  >\r\n                    Resend code\r\n                  </button>\r\n                  <Button\r\n                    className=\"h-12 text-base min-w-[120px]\"\r\n                    onClick={handleVerify}\r\n                    disabled={loading}\r\n                  >\r\n                    {loading ? \"Verifying...\" : \"Verify\"}\r\n                  </Button>\r\n                </div>\r\n                {!!error && (\r\n                  <div\r\n                    className=\"rounded-lg border border-destructive/20 bg-destructive/5 px-3 py-2 text-sm text-destructive\"\r\n                    role=\"alert\"\r\n                  >\r\n                    {error}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div className=\"grid gap-3\">\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  Enter your email and password to continue.\r\n                </p>\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"email2\">Email</Label>\r\n                  <Input\r\n                    id=\"email2\"\r\n                    type=\"email\"\r\n                    autoComplete=\"email\"\r\n                    placeholder=\"you@example.com\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    className=\"h-12 text-base\"\r\n                  />\r\n                </div>\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"password2\">Password</Label>\r\n                  <Input\r\n                    id=\"password2\"\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    placeholder=\"Enter your password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    className=\"h-12 text-base\"\r\n                  />\r\n                </div>\r\n                <div className=\"flex items-center justify-end\">\r\n                  <Button\r\n                    className=\"h-12 text-base min-w-[120px]\"\r\n                    onClick={handleVerify}\r\n                    disabled={loading}\r\n                  >\r\n                    {loading ? \"Signing in...\" : \"Sign in\"}\r\n                  </Button>\r\n                </div>\r\n                {!!error && (\r\n                  <div\r\n                    className=\"rounded-lg border border-destructive/20 bg-destructive/5 px-3 py-2 text-sm text-destructive\"\r\n                    role=\"alert\"\r\n                  >\r\n                    {error}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {step === \"profile\" && (\r\n          <div className=\"grid gap-6 animate-in fade-in-50\">\r\n            <div className=\"grid gap-2\">\r\n              <Label htmlFor=\"name\" className=\"text-base font-semibold\">\r\n                Profile details\r\n              </Label>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Help us personalize your experience.\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"grid gap-4\">\r\n              <div className=\"grid gap-2\">\r\n                <Label htmlFor=\"fullname\">Full name</Label>\r\n               <Input\r\n  id=\"fullname\"\r\n  placeholder=\"Enter your name\"\r\n  value={name}\r\n  onChange={(e) => {\r\n    // Allow only letters and spaces\r\n    const value = e.target.value.replace(/[^a-zA-Z\\s]/g, \"\");\r\n    setName(value);\r\n  }}\r\n  className=\"h-12 text-base\"\r\n/>\r\n              </div>\r\n\r\n              {role === \"student\" && (\r\n                <div className=\"grid gap-2\">\r\n                  <Label>Class / Grade</Label>\r\n                  <Select\r\n                    value={grade}\r\n                    onValueChange={(v) => setGrade(v)}\r\n                  >\r\n                    <SelectTrigger className=\"h-12 text-base\">\r\n                      <SelectValue placeholder=\"Select your class\" />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      {grades\r\n  .filter((g) => {\r\n    const num = parseInt(g.value.replace(\"grade-\", \"\"));\r\n    return num >= 6 && num <= 12;\r\n  })\r\n  .map((g) => (\r\n    <SelectItem key={g.value} value={g.value}>\r\n      {g.label}\r\n    </SelectItem>\r\n))}\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"grid gap-2\">\r\n                <Label>Preferred language</Label>\r\n                <Select\r\n                  value={language}\r\n                  onValueChange={(v) => setLanguage(v)}\r\n                >\r\n                  <SelectTrigger className=\"h-12 text-base\">\r\n                    <SelectValue placeholder=\"Choose a language\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    {languages.map((l) => (\r\n                      <SelectItem key={l.value} value={l.value}>\r\n                        {l.label}\r\n                      </SelectItem>\r\n                    ))}\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n\r\n              <div className=\"grid gap-2\">\r\n                <Label>Choose an avatar</Label>\r\n                <div className=\"grid grid-cols-3 sm:grid-cols-6 gap-3 p-1 overflow-visible\">\r\n  {avatarOptions.map((a) => {\r\n    const active = avatar === a.url\r\n    return (\r\n      <button\r\n        key={a.id}\r\n        type=\"button\"\r\n        onClick={() => setAvatar(a.url)}\r\n        aria-pressed={active}\r\n        aria-label={`Select avatar: ${a.alt}`}\r\n        className={cn(\r\n          \"relative aspect-square min-h-[56px] overflow-hidden rounded-xl border transition\",\r\n          active\r\n            ? \"border-primary ring-2 ring-primary/20\"\r\n            : \"border-border hover:border-foreground/40\"\r\n        )}\r\n      >\r\n        <img\r\n          src={a.url}\r\n          alt={a.alt}\r\n          className=\"h-full w-full object-cover\"\r\n          loading=\"lazy\"\r\n        />\r\n        {active && (\r\n          <div className=\"absolute inset-0 ring-inset ring-2 ring-primary/30 pointer-events-none\" />\r\n        )}\r\n      </button>\r\n    )\r\n  })}\r\n</div>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  Avatars add fun to learning. You can change this anytime.\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            {!!error && (\r\n              <div\r\n                className=\"rounded-lg border border-destructive/20 bg-destructive/5 px-3 py-2 text-sm text-destructive\"\r\n                role=\"alert\"\r\n              >\r\n                {error}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"text-sm text-muted-foreground hover:text-foreground underline underline-offset-4\"\r\n                onClick={() => setStep(\"auth\")}\r\n              >\r\n                Back\r\n              </button>\r\n              <Button\r\n                className=\"h-12 text-base min-w-[140px]\"\r\n                onClick={handleProfileComplete}\r\n                disabled={loading}\r\n              >\r\n                {loading ? \"Saving...\" : \"Finish\"}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nfunction RoleCard({\r\n  icon,\r\n  title,\r\n  description,\r\n  active,\r\n  onClick,\r\n  ariaLabel,\r\n}: {\r\n  icon: React.ReactNode\r\n  title: string\r\n  description: string\r\n  active?: boolean\r\n  onClick?: () => void\r\n  ariaLabel?: string\r\n}) {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      onClick={onClick}\r\n      aria-pressed={!!active}\r\n      aria-label={ariaLabel || title}\r\n      className={cn(\r\n        \"flex w-full items-center gap-3 rounded-2xl border p-3 sm:p-4 transition\",\r\n        \"text-left bg-card\",\r\n        active\r\n          ? \"border-primary shadow-sm\"\r\n          : \"border-border hover:border-foreground/40\"\r\n      )}\r\n    >\r\n      <div\r\n        className={cn(\r\n          \"inline-flex h-12 w-12 shrink-0 items-center justify-center rounded-xl\",\r\n          active ? \"bg-accent text-foreground\" : \"bg-secondary text-foreground\"\r\n        )}\r\n      >\r\n        {icon}\r\n      </div>\r\n      <div className=\"min-w-0\">\r\n        <div className=\"font-semibold break-words\">{title}</div>\r\n        <div className=\"text-sm text-muted-foreground break-words\">\r\n          {description}\r\n        </div>\r\n      </div>\r\n    </button>\r\n  )\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}