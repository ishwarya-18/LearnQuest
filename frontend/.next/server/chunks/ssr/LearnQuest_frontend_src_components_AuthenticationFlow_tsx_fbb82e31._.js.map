{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/documents/LearnQuest/frontend/src/components/AuthenticationFlow.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { toast } from \"sonner\"\nimport {\n  UserRoundPlus,\n  LogIn,\n  CircleUserRound,\n  IdCard,\n  KeyRound,\n  User,\n} from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport {\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n} from \"@/components/ui/tabs\"\nimport {\n  Select,\n  SelectTrigger,\n  SelectValue,\n  SelectContent,\n  SelectItem,\n} from \"@/components/ui/select\"\n\ntype Role = \"student\" | \"teacher\" | \"admin\"\ntype AuthMode = \"login\" | \"signup\"\ntype Method = \"phone\" | \"email\"\n\ninterface AuthenticationFlowProps {\n  className?: string\n  initialRole?: Role\n  defaultMode?: AuthMode\n  onComplete?: (payload: {\n    role: Role\n    authMode: AuthMode\n    method: Method\n    user: {\n      name: string\n      grade?: string\n      language: string\n      avatarUrl?: string\n    }\n    contact: { phone?: string; email?: string }\n  }) => void\n}\n\nconst avatarOptions: { id: string; url: string; alt: string }[] = [\n  {\n    id: \"av1\",\n    url: \"https://images.unsplash.com/photo-1544005313-94ddf0286df2?q=80&w=300&auto=format&fit=crop\",\n    alt: \"Smiling student\",\n  },\n  {\n    id: \"av2\",\n    url: \"https://images.unsplash.com/photo-1527980965255-d3b416303d12?q=80&w=300&auto=format&fit=crop\",\n    alt: \"Boy with backpack\",\n  },\n  {\n    id: \"av3\",\n    url: \"https://images.unsplash.com/photo-1547425260-76bcadfb4f2c?q=80&w=300&auto=format&fit=crop\",\n    alt: \"Smiling teacher\",\n  },\n  {\n    id: \"av4\",\n    url: \"https://images.unsplash.com/photo-1531123897727-8f129e1688ce?q=80&w=300&auto=format&fit=crop\",\n    alt: \"Happy learner\",\n  },\n  {\n    id: \"av5\",\n    url: \"https://images.unsplash.com/photo-1463453091185-61582044d556?q=80&w=300&auto=format&fit=crop\",\n    alt: \"Man in blue jacket\",\n  },\n  {\n    id: \"av6\",\n    url: \"https://images.unsplash.com/photo-1529665253569-6d01c0eaf7b6?q=80&w=300&auto=format&fit=crop\",\n    alt: \"Young adult portrait\",\n  },\n]\n\nconst grades = [\n  { value: \"grade-1\", label: \"Class 1\" },\n  { value: \"grade-2\", label: \"Class 2\" },\n  { value: \"grade-3\", label: \"Class 3\" },\n  { value: \"grade-4\", label: \"Class 4\" },\n  { value: \"grade-5\", label: \"Class 5\" },\n  { value: \"grade-6\", label: \"Class 6\" },\n  { value: \"grade-7\", label: \"Class 7\" },\n  { value: \"grade-8\", label: \"Class 8\" },\n  { value: \"grade-9\", label: \"Class 9\" },\n  { value: \"grade-10\", label: \"Class 10\" },\n  { value: \"grade-11\", label: \"Class 11\" },\n  { value: \"grade-12\", label: \"Class 12\" },\n]\n\nconst languages = [\n  { value: \"en\", label: \"English\" },\n  { value: \"hi\", label: \"हिंदी (Hindi)\" },\n  { value: \"bn\", label: \"বাংলা (Bengali)\" },\n  { value: \"te\", label: \"తెలుగు (Telugu)\" },\n  { value: \"ta\", label: \"தமிழ் (Tamil)\" },\n  { value: \"mr\", label: \"मराठी (Marathi)\" },\n]\n\ntype Step = \"role\" | \"auth\" | \"verify\" | \"profile\"\n\nexport default function AuthenticationFlow({\n  className,\n  initialRole = \"student\",\n  defaultMode = \"signup\",\n  onComplete,\n}: AuthenticationFlowProps) {\n  const [step, setStep] = React.useState<Step>(\"role\")\n  const [role, setRole] = React.useState<Role>(initialRole)\n  const [authMode, setAuthMode] = React.useState<AuthMode>(defaultMode)\n  const [method, setMethod] = React.useState<Method>(\"phone\")\n\n  // Contact info\n  const [phone, setPhone] = React.useState(\"\")\n  const [email, setEmail] = React.useState(\"\")\n  const [password, setPassword] = React.useState(\"\")\n\n  // OTP\n  const [otp, setOtp] = React.useState(\"\")\n  const [otpSent, setOtpSent] = React.useState(false)\n\n  // Profile\n  const [name, setName] = React.useState(\"\")\n  const [grade, setGrade] = React.useState<string | undefined>(undefined)\n  const [language, setLanguage] = React.useState<string | undefined>(undefined)\n  const [avatar, setAvatar] = React.useState<string | undefined>(undefined)\n\n  // UI states\n  const [loading, setLoading] = React.useState(false)\n  const [error, setError] = React.useState<string | null>(null)\n\n  React.useEffect(() => {\n    // Reset downstream state when mode/method changes\n    setError(null)\n  }, [authMode, method])\n\n  function validateContact(): boolean {\n   if (method === \"phone\") {\n  const cleaned = phone.replace(/\\D/g, \"\")\n  if (cleaned.length !== 10) {\n    setError(\"Please enter a valid 10-digit phone number.\")\n    return false\n  }\n  return true\n} else {\n      const isValid = /^\\S+@\\S+\\.\\S+$/.test(email)\n      if (!isValid) {\n        setError(\"Please enter a valid email address.\")\n        return false\n      }\n      if (authMode === \"login\" && password.length < 6) {\n        setError(\"Password should be at least 6 characters.\")\n        return false\n      }\n      if (authMode === \"signup\" && password && password.length < 6) {\n        setError(\"If you set a password, use at least 6 characters.\")\n        return false\n      }\n      return true\n    }\n  }\n\n  function nextFromRole() {\n    setStep(\"auth\")\n  }\n\n  async function handleSendCode() {\n    setError(null)\n    if (!validateContact()) {\n      toast.error(\"Fix the highlighted fields\")\n      return\n    }\n    setLoading(true)\n    // Simulate API call\n    setTimeout(() => {\n      setLoading(false)\n      setOtpSent(true)\n      setStep(\"verify\")\n      toast.success(\"OTP sent to your phone\")\n    }, 900)\n  }\n\n  async function handleVerify() {\n    setError(null)\n    if (method === \"phone\") {\n      if (otp.replace(/\\D/g, \"\").length !== 6) {\n        setError(\"Enter the 6-digit code.\")\n        return\n      }\n    } else {\n      if (authMode === \"login\") {\n        // Email + password\n        if (!validateContact()) return\n      } else {\n        // Email signup uses verification optional in this simplified flow\n        if (!validateContact()) return\n      }\n    }\n\n    setLoading(true)\n    setTimeout(() => {\n      setLoading(false)\n      if (authMode === \"login\") {\n        // Login complete: skip profile if we pretend profile exists\n        toast.success(\"Welcome back!\")\n        onComplete?.({\n          role,\n          authMode,\n          method,\n          user: {\n            name: \"Learner\",\n            language: language || \"en\",\n            grade,\n            avatarUrl: avatar,\n          },\n          contact: { phone, email },\n        })\n      } else {\n        // Proceed to profile setup for signup\n        setStep(\"profile\")\n        toast.success(\"Account created. Set up your profile.\")\n      }\n    }, 900)\n  }\n\n  function handleEmailLogin() {\n    setError(null)\n    if (!validateContact()) {\n      toast.error(\"Fix the highlighted fields\")\n      return\n    }\n    setLoading(true)\n    setTimeout(() => {\n      setLoading(false)\n      toast.success(\"Logged in successfully\")\n      onComplete?.({\n        role,\n        authMode: \"login\",\n        method: \"email\",\n        user: { name: \"Learner\", language: \"en\", grade, avatarUrl: avatar },\n        contact: { email },\n      })\n    }, 900)\n  }\n\n  async function handleProfileComplete() {\n    setError(null)\n    if (!name.trim()) {\n      setError(\"Please enter your full name.\")\n      return\n    }\n    if (role === \"student\" && !grade) {\n      setError(\"Please select your class.\")\n      return\n    }\n    if (!language) {\n      setError(\"Please choose your preferred language.\")\n      return\n    }\n    setLoading(true)\n    setTimeout(() => {\n      setLoading(false)\n      toast.success(\"Profile saved\")\n      onComplete?.({\n        role,\n        authMode,\n        method,\n        user: {\n          name: name.trim(),\n          grade,\n          language,\n          avatarUrl: avatar,\n        },\n        contact: { phone, email },\n      })\n    }, 900)\n  }\n\n  function resetToStart() {\n    setStep(\"role\")\n    setAuthMode(defaultMode)\n    setMethod(\"phone\")\n    setPhone(\"\")\n    setEmail(\"\")\n    setPassword(\"\")\n    setOtp(\"\")\n    setOtpSent(false)\n    setName(\"\")\n    setGrade(undefined)\n    setLanguage(undefined)\n    setAvatar(undefined)\n    setError(null)\n  }\n\n  return (\n    <section\n      className={cn(\n        \"w-full max-w-full\",\n        \"bg-card text-foreground rounded-2xl border border-border\",\n        \"shadow-sm\",\n        \"p-4 sm:p-6 md:p-8\",\n        className\n      )}\n      aria-label=\"Authentication flow\"\n    >\n      <header className=\"mb-4 sm:mb-6\">\n        <div className=\"flex items-center gap-3\">\n          <div className=\"inline-flex h-11 w-11 shrink-0 items-center justify-center rounded-xl bg-accent text-primary\">\n            {authMode === \"signup\" ? (\n              <UserRoundPlus className=\"h-6 w-6\" aria-hidden=\"true\" />\n            ) : (\n              <LogIn className=\"h-6 w-6\" aria-hidden=\"true\" />\n            )}\n          </div>\n          <div className=\"min-w-0\">\n            <h3 className=\"text-xl sm:text-2xl font-bold truncate\">\n              {authMode === \"signup\" ? \"Create your account\" : \"Welcome back\"}\n            </h3>\n            <p className=\"text-sm text-muted-foreground\">\n              LearnQuest • Simple, secure sign in for rural education\n            </p>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"grid gap-6\">\n        {/* Mode Switch */}\n        <div className=\"flex flex-col gap-2\">\n          <Label className=\"text-sm font-medium\">I want to</Label>\n          <div className=\"inline-flex w-full overflow-hidden rounded-xl border border-border bg-secondary p-1\">\n            <button\n              type=\"button\"\n              aria-pressed={authMode === \"signup\"}\n              onClick={() => setAuthMode(\"signup\")}\n              className={cn(\n                \"flex-1 rounded-lg px-3 py-2.5 text-center text-sm font-medium transition\",\n                authMode === \"signup\"\n                  ? \"bg-card text-foreground shadow-sm\"\n                  : \"text-muted-foreground hover:text-foreground\"\n              )}\n            >\n              Create account\n            </button>\n            <button\n              type=\"button\"\n              aria-pressed={authMode === \"login\"}\n              onClick={() => setAuthMode(\"login\")}\n              className={cn(\n                \"flex-1 rounded-lg px-3 py-2.5 text-center text-sm font-medium transition\",\n                authMode === \"login\"\n                  ? \"bg-card text-foreground shadow-sm\"\n                  : \"text-muted-foreground hover:text-foreground\"\n              )}\n            >\n              Sign in\n            </button>\n          </div>\n        </div>\n\n        {/* Step indicators */}\n        <nav\n          className=\"flex items-center gap-2\"\n          aria-label=\"Progress\"\n        >\n          {[\"role\", \"auth\", authMode === \"login\" ? \"verify\" : \"verify\", \"profile\"].map(\n            (s, idx) => {\n              const isActive =\n                step === (s as Step) ||\n                (step === \"verify\" && s === \"auth\" && method === \"email\" && authMode === \"login\")\n              const isDone =\n                [\"auth\", \"verify\", \"profile\"].indexOf(step) >= 0 &&\n                [\"role\", \"auth\"].includes(s)\n              const label =\n                s === \"role\"\n                  ? \"Role\"\n                  : s === \"auth\"\n                  ? \"Contact\"\n                  : s === \"verify\"\n                  ? method === \"phone\"\n                    ? \"OTP\"\n                    : \"Password\"\n                  : \"Profile\"\n              return (\n                <div\n                  key={s}\n                  className={cn(\n                    \"flex items-center gap-2\",\n                    idx > 0 && \"min-w-0\"\n                  )}\n                >\n                  {idx > 0 && (\n                    <div className=\"h-[2px] w-4 sm:w-6 bg-border\" aria-hidden=\"true\" />\n                  )}\n                  <div\n                    className={cn(\n                      \"inline-flex items-center gap-2 rounded-full border px-3 py-1.5\",\n                      isActive\n                        ? \"bg-accent border-border\"\n                        : isDone\n                        ? \"bg-secondary border-border\"\n                        : \"bg-card border-border\"\n                    )}\n                  >\n                    <span className=\"text-xs font-medium\">{label}</span>\n                  </div>\n                </div>\n              )\n            }\n          )}\n        </nav>\n\n        {/* Steps */}\n        {step === \"role\" && (\n          <div\n            className=\"grid gap-4 animate-in fade-in-50\"\n            role=\"group\"\n            aria-labelledby=\"role-label\"\n          >\n            <Label id=\"role-label\" className=\"text-base font-semibold\">\n              Choose your role\n            </Label>\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-3\">\n              <RoleCard\n                icon={<CircleUserRound className=\"h-7 w-7\" aria-hidden=\"true\" />}\n                title=\"Student\"\n                description=\"Learn with quests and earn rewards\"\n                active={role === \"student\"}\n                onClick={() => setRole(\"student\")}\n                ariaLabel=\"Select Student role\"\n              />\n              <RoleCard\n                icon={<IdCard className=\"h-7 w-7\" aria-hidden=\"true\" />}\n                title=\"Teacher\"\n                description=\"Manage classes and track progress\"\n                active={role === \"teacher\"}\n                onClick={() => setRole(\"teacher\")}\n                ariaLabel=\"Select Teacher role\"\n              />\n              <RoleCard\n                icon={<User className=\"h-7 w-7\" aria-hidden=\"true\" />}\n                title=\"Admin\"\n                description=\"Oversee content and users\"\n                active={role === \"admin\"}\n                onClick={() => setRole(\"admin\")}\n                ariaLabel=\"Select Admin role\"\n              />\n            </div>\n            <div className=\"flex items-center justify-between gap-3 pt-1\">\n              <p className=\"text-sm text-muted-foreground\">\n                You can change role later if needed.\n              </p>\n              <Button\n                onClick={nextFromRole}\n                className=\"min-w-[120px]\"\n                aria-label=\"Continue to contact step\"\n              >\n                Continue\n              </Button>\n            </div>\n          </div>\n        )}\n\n        {step === \"auth\" && (\n          <div className=\"grid gap-5 animate-in fade-in-50\">\n            <div className=\"grid gap-2\">\n              <Label className=\"text-base font-semibold\">\n                Choose sign {authMode === \"signup\" ? \"up\" : \"in\"} method\n              </Label>\n              <Tabs\n                defaultValue={method}\n                value={method}\n                onValueChange={(v) => setMethod(v as Method)}\n                className=\"w-full\"\n              >\n                <TabsList className=\"grid w-full grid-cols-2 rounded-xl bg-secondary p-1\">\n                  <TabsTrigger\n                    value=\"phone\"\n                    className=\"rounded-lg text-sm data-[state=active]:bg-card data-[state=active]:shadow-sm\"\n                  >\n                    Phone\n                  </TabsTrigger>\n                  <TabsTrigger\n                    value=\"email\"\n                    className=\"rounded-lg text-sm data-[state=active]:bg-card data-[state=active]:shadow-sm\"\n                  >\n                    Email\n                  </TabsTrigger>\n                </TabsList>\n\n                <TabsContent value=\"phone\" className=\"mt-4\">\n                  <div className=\"grid gap-3\">\n                    <div className=\"grid gap-2\">\n                      <Label htmlFor=\"phone\">Phone number</Label>\n                      <Input\n                        id=\"phone\"\n                        inputMode=\"tel\"\n                        autoComplete=\"tel\"\n                        placeholder=\"Enter 10-digit phone\"\n                        value={phone}\n                        onChange={(e) => setPhone(e.target.value)}\n                        className=\"h-12 text-base\"\n                        aria-invalid={!!error && method === \"phone\"}\n                      />\n                    </div>\n                    <Button\n                      className=\"h-12 text-base\"\n                      onClick={handleSendCode}\n                      disabled={loading}\n                    >\n                      {loading ? \"Sending...\" : \"Send OTP\"}\n                    </Button>\n                    <p className=\"text-xs text-muted-foreground\">\n                      We’ll send a 6-digit code via SMS for quick access.\n                    </p>\n                  </div>\n                </TabsContent>\n\n                <TabsContent value=\"email\" className=\"mt-4\">\n                  <div className=\"grid gap-3\">\n                    <div className=\"grid gap-2\">\n                      <Label htmlFor=\"email\">Email</Label>\n                      <Input\n                        id=\"email\"\n                        type=\"email\"\n                        autoComplete=\"email\"\n                        placeholder=\"you@example.com\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        className=\"h-12 text-base\"\n                        aria-invalid={!!error && method === \"email\"}\n                      />\n                    </div>\n                    <div className=\"grid gap-2\">\n                      <Label htmlFor=\"password\">\n                        {authMode === \"login\" ? \"Password\" : \"Set a password (optional)\"}\n                      </Label>\n                      <div className=\"relative\">\n                        <KeyRound className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-muted-foreground pointer-events-none\" />\n                        <Input\n                          id=\"password\"\n                          type=\"password\"\n                          autoComplete={authMode === \"login\" ? \"current-password\" : \"new-password\"}\n                          placeholder={authMode === \"login\" ? \"Enter your password\" : \"Create a password\"}\n                          value={password}\n                          onChange={(e) => setPassword(e.target.value)}\n                          className=\"h-12 text-base pl-11\"\n                        />\n                      </div>\n                    </div>\n                    {authMode === \"login\" ? (\n                      <Button\n                        className=\"h-12 text-base\"\n                        onClick={handleEmailLogin}\n                        disabled={loading}\n                      >\n                        {loading ? \"Signing in...\" : \"Sign in with Email\"}\n                      </Button>\n                    ) : (\n                      <Button\n                        className=\"h-12 text-base\"\n                        onClick={() => {\n                          // For email signup, proceed to profile directly\n                          if (!validateContact()) {\n                            toast.error(\"Fix the highlighted fields\")\n                            return\n                          }\n                          setStep(\"profile\")\n                          toast.success(\"Account created. Set up your profile.\")\n                        }}\n                        disabled={loading}\n                      >\n                        {loading ? \"Creating...\" : \"Continue\"}\n                      </Button>\n                    )}\n                    <p className=\"text-xs text-muted-foreground\">\n                      Your information is secure and will never be shared.\n                    </p>\n                  </div>\n                </TabsContent>\n              </Tabs>\n            </div>\n\n            {!!error && (\n              <div\n                className=\"rounded-lg border border-destructive/20 bg-destructive/5 px-3 py-2 text-sm text-destructive\"\n                role=\"alert\"\n              >\n                {error}\n              </div>\n            )}\n\n            <div className=\"flex items-center justify-between\">\n              <button\n                type=\"button\"\n                className=\"text-sm text-muted-foreground hover:text-foreground underline underline-offset-4\"\n                onClick={resetToStart}\n              >\n                Change role\n              </button>\n              {method === \"phone\" && otpSent && (\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => setStep(\"verify\")}\n                  className=\"h-10\"\n                >\n                  Enter OTP\n                </Button>\n              )}\n            </div>\n          </div>\n        )}\n\n        {step === \"verify\" && (\n          <div className=\"grid gap-5 animate-in fade-in-50\">\n            {method === \"phone\" ? (\n              <div className=\"grid gap-3\">\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"otp\">Enter 6-digit OTP</Label>\n                  <Input\n                    id=\"otp\"\n                    inputMode=\"numeric\"\n                    pattern=\"[0-9]*\"\n                    maxLength={6}\n                    placeholder=\"••••••\"\n                    value={otp}\n                    onChange={(e) => setOtp(e.target.value.replace(/\\D/g, \"\"))}\n                    className=\"h-12 text-center tracking-[0.3em] text-lg font-medium\"\n                    aria-invalid={!!error}\n                  />\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <button\n                    type=\"button\"\n                    className=\"text-sm text-muted-foreground hover:text-foreground underline underline-offset-4\"\n                    onClick={handleSendCode}\n                    disabled={loading}\n                  >\n                    Resend code\n                  </button>\n                  <Button\n                    className=\"h-12 text-base min-w-[120px]\"\n                    onClick={handleVerify}\n                    disabled={loading}\n                  >\n                    {loading ? \"Verifying...\" : \"Verify\"}\n                  </Button>\n                </div>\n                {!!error && (\n                  <div\n                    className=\"rounded-lg border border-destructive/20 bg-destructive/5 px-3 py-2 text-sm text-destructive\"\n                    role=\"alert\"\n                  >\n                    {error}\n                  </div>\n                )}\n              </div>\n            ) : (\n              <div className=\"grid gap-3\">\n                <p className=\"text-sm text-muted-foreground\">\n                  Enter your email and password to continue.\n                </p>\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"email2\">Email</Label>\n                  <Input\n                    id=\"email2\"\n                    type=\"email\"\n                    autoComplete=\"email\"\n                    placeholder=\"you@example.com\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    className=\"h-12 text-base\"\n                  />\n                </div>\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"password2\">Password</Label>\n                  <Input\n                    id=\"password2\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    placeholder=\"Enter your password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    className=\"h-12 text-base\"\n                  />\n                </div>\n                <div className=\"flex items-center justify-end\">\n                  <Button\n                    className=\"h-12 text-base min-w-[120px]\"\n                    onClick={handleVerify}\n                    disabled={loading}\n                  >\n                    {loading ? \"Signing in...\" : \"Sign in\"}\n                  </Button>\n                </div>\n                {!!error && (\n                  <div\n                    className=\"rounded-lg border border-destructive/20 bg-destructive/5 px-3 py-2 text-sm text-destructive\"\n                    role=\"alert\"\n                  >\n                    {error}\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        )}\n\n        {step === \"profile\" && (\n          <div className=\"grid gap-6 animate-in fade-in-50\">\n            <div className=\"grid gap-2\">\n              <Label htmlFor=\"name\" className=\"text-base font-semibold\">\n                Profile details\n              </Label>\n              <p className=\"text-sm text-muted-foreground\">\n                Help us personalize your experience.\n              </p>\n            </div>\n\n            <div className=\"grid gap-4\">\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"fullname\">Full name</Label>\n               <Input\n  id=\"fullname\"\n  placeholder=\"Enter your name\"\n  value={name}\n  onChange={(e) => {\n    // Allow only letters and spaces\n    const value = e.target.value.replace(/[^a-zA-Z\\s]/g, \"\");\n    setName(value);\n  }}\n  className=\"h-12 text-base\"\n/>\n              </div>\n\n              {role === \"student\" && (\n                <div className=\"grid gap-2\">\n                  <Label>Class / Grade</Label>\n                  <Select\n                    value={grade}\n                    onValueChange={(v) => setGrade(v)}\n                  >\n                    <SelectTrigger className=\"h-12 text-base\">\n                      <SelectValue placeholder=\"Select your class\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {grades\n  .filter((g) => {\n    const num = parseInt(g.value.replace(\"grade-\", \"\"));\n    return num >= 6 && num <= 12;\n  })\n  .map((g) => (\n    <SelectItem key={g.value} value={g.value}>\n      {g.label}\n    </SelectItem>\n))}\n                    </SelectContent>\n                  </Select>\n                </div>\n              )}\n\n              <div className=\"grid gap-2\">\n                <Label>Preferred language</Label>\n                <Select\n                  value={language}\n                  onValueChange={(v) => setLanguage(v)}\n                >\n                  <SelectTrigger className=\"h-12 text-base\">\n                    <SelectValue placeholder=\"Choose a language\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {languages.map((l) => (\n                      <SelectItem key={l.value} value={l.value}>\n                        {l.label}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div className=\"grid gap-2\">\n                <Label>Choose an avatar</Label>\n                <div className=\"grid grid-cols-3 sm:grid-cols-6 gap-3 p-1 overflow-visible\">\n  {avatarOptions.map((a) => {\n    const active = avatar === a.url\n    return (\n      <button\n        key={a.id}\n        type=\"button\"\n        onClick={() => setAvatar(a.url)}\n        aria-pressed={active}\n        aria-label={`Select avatar: ${a.alt}`}\n        className={cn(\n          \"relative aspect-square min-h-[56px] overflow-hidden rounded-xl border transition\",\n          active\n            ? \"border-primary ring-2 ring-primary/20\"\n            : \"border-border hover:border-foreground/40\"\n        )}\n      >\n        <img\n          src={a.url}\n          alt={a.alt}\n          className=\"h-full w-full object-cover\"\n          loading=\"lazy\"\n        />\n        {active && (\n          <div className=\"absolute inset-0 ring-inset ring-2 ring-primary/30 pointer-events-none\" />\n        )}\n      </button>\n    )\n  })}\n</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Avatars add fun to learning. You can change this anytime.\n                </p>\n              </div>\n            </div>\n\n            {!!error && (\n              <div\n                className=\"rounded-lg border border-destructive/20 bg-destructive/5 px-3 py-2 text-sm text-destructive\"\n                role=\"alert\"\n              >\n                {error}\n              </div>\n            )}\n\n            <div className=\"flex items-center justify-between\">\n              <button\n                type=\"button\"\n                className=\"text-sm text-muted-foreground hover:text-foreground underline underline-offset-4\"\n                onClick={() => setStep(\"auth\")}\n              >\n                Back\n              </button>\n              <Button\n                className=\"h-12 text-base min-w-[140px]\"\n                onClick={handleProfileComplete}\n                disabled={loading}\n              >\n                {loading ? \"Saving...\" : \"Finish\"}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </section>\n  )\n}\n\nfunction RoleCard({\n  icon,\n  title,\n  description,\n  active,\n  onClick,\n  ariaLabel,\n}: {\n  icon: React.ReactNode\n  title: string\n  description: string\n  active?: boolean\n  onClick?: () => void\n  ariaLabel?: string\n}) {\n  return (\n    <button\n      type=\"button\"\n      onClick={onClick}\n      aria-pressed={!!active}\n      aria-label={ariaLabel || title}\n      className={cn(\n        \"flex w-full items-center gap-3 rounded-2xl border p-3 sm:p-4 transition\",\n        \"text-left bg-card\",\n        active\n          ? \"border-primary shadow-sm\"\n          : \"border-border hover:border-foreground/40\"\n      )}\n    >\n      <div\n        className={cn(\n          \"inline-flex h-12 w-12 shrink-0 items-center justify-center rounded-xl\",\n          active ? \"bg-accent text-foreground\" : \"bg-secondary text-foreground\"\n        )}\n      >\n        {icon}\n      </div>\n      <div className=\"min-w-0\">\n        <div className=\"font-semibold break-words\">{title}</div>\n        <div className=\"text-sm text-muted-foreground break-words\">\n          {description}\n        </div>\n      </div>\n    </button>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}