{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mjeyl/OneDrive/Documents/LearnQuest/frontend/src/components/SettingsAndSupport.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport {\r\n  Languages,\r\n  UserRoundCog,\r\n  Accessibility as AccessibilityIcon,\r\n  Speech,\r\n  CircleQuestionMark,\r\n  LaptopMinimal,\r\n  Monitor,\r\n  Settings2,\r\n  MessageCircleQuestionMark,\r\n} from \"lucide-react\";\r\nimport { toast } from \"sonner\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport {\r\n  Tabs,\r\n  TabsList,\r\n  TabsTrigger,\r\n  TabsContent,\r\n} from \"@/components/ui/tabs\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport {\r\n  Select,\r\n  SelectTrigger,\r\n  SelectValue,\r\n  SelectContent,\r\n  SelectItem,\r\n} from \"@/components/ui/select\";\r\nimport { Switch } from \"@/components/ui/switch\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardContent,\r\n} from \"@/components/ui/card\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport {\r\n  Avatar,\r\n  AvatarImage,\r\n  AvatarFallback,\r\n} from \"@/components/ui/avatar\";\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionTrigger,\r\n  AccordionContent,\r\n} from \"@/components/ui/accordion\";\r\n\r\ntype LanguageCode =\r\n  | \"en\"\r\n  | \"hi\"\r\n  | \"bn\"\r\n  | \"te\"\r\n  | \"mr\"\r\n  | \"ta\"\r\n  | \"gu\"\r\n  | \"kn\"\r\n  | \"ml\"\r\n  | \"pa\"\r\n  | \"or\"\r\n  | \"as\";\r\n\r\ntype NotificationPrefs = {\r\n  email: boolean;\r\n  sms: boolean;\r\n  push: boolean;\r\n  weeklyDigest: boolean;\r\n  reminders: boolean;\r\n};\r\n\r\ntype AccessibilityPrefs = {\r\n  highContrast: boolean;\r\n  largeText: boolean;\r\n  reduceMotion: boolean;\r\n  captions: boolean;\r\n  screenReaderHints: boolean;\r\n};\r\n\r\ntype SyncPrefs = {\r\n  offlineMode: boolean;\r\n  autoSyncOnWifi: boolean;\r\n  dataSaver: boolean;\r\n};\r\n\r\ntype PrivacyPrefs = {\r\n  profileVisibility: \"everyone\" | \"classmates\" | \"only-me\";\r\n  analyticsSharing: boolean;\r\n  contentFiltering: boolean;\r\n};\r\n\r\ntype SettingsAndSupportProps = {\r\n  className?: string;\r\n  style?: React.CSSProperties;\r\n  defaultLanguage?: LanguageCode;\r\n  onLanguageChange?: (lang: LanguageCode) => void;\r\n  onProfileSave?: (data: {\r\n    name: string;\r\n    email: string;\r\n    phone: string;\r\n    avatarUrl?: string;\r\n  }) => void;\r\n  onPasswordChange?: (data: { current: string; next: string }) => void;\r\n  onContactSubmit?: (data: {\r\n    category: \"technical\" | \"billing\" | \"feedback\" | \"other\";\r\n    message: string;\r\n  }) => void;\r\n  initialNotifications?: Partial<NotificationPrefs>;\r\n  initialAccessibility?: Partial<AccessibilityPrefs>;\r\n  initialSync?: Partial<SyncPrefs>;\r\n  initialPrivacy?: Partial<PrivacyPrefs>;\r\n};\r\n\r\nconst languageOptions: Array<{ code: LanguageCode; label: string; native: string }> = [\r\n  { code: \"en\", label: \"English\", native: \"English\" },\r\n  { code: \"hi\", label: \"Hindi\", native: \"हिन्दी\" },\r\n  { code: \"bn\", label: \"Bengali\", native: \"বাংলা\" },\r\n  { code: \"te\", label: \"Telugu\", native: \"తెలుగు\" },\r\n  { code: \"mr\", label: \"Marathi\", native: \"मराठी\" },\r\n  { code: \"ta\", label: \"Tamil\", native: \"தமிழ்\" },\r\n  { code: \"gu\", label: \"Gujarati\", native: \"ગુજરાતી\" },\r\n  { code: \"kn\", label: \"Kannada\", native: \"ಕನ್ನಡ\" },\r\n  { code: \"ml\", label: \"Malayalam\", native: \"മലയാളം\" },\r\n  { code: \"pa\", label: \"Punjabi\", native: \"ਪੰਜਾਬੀ\" },\r\n  { code: \"or\", label: \"Odia\", native: \"ଓଡ଼ିଆ\" },\r\n  { code: \"as\", label: \"Assamese\", native: \"অসমীয়া\" },\r\n];\r\n\r\nconst faqItems = [\r\n  {\r\n    q: \"How do I use LearnQuest without internet?\",\r\n    a: \"Enable Offline Mode in Preferences. Lessons and quizzes you open will be stored on your device and sync automatically when Wi‑Fi is available.\",\r\n    tags: [\"offline\", \"sync\", \"rural\"],\r\n  },\r\n  {\r\n    q: \"Why are videos not playing on my device?\",\r\n    a: \"Check Device Compatibility in Troubleshooting. Try lowering video quality in Preferences > Accessibility (Reduce Motion). If issues persist, contact Support.\",\r\n    tags: [\"video\", \"device\", \"compatibility\"],\r\n  },\r\n  {\r\n    q: \"How can I change my language?\",\r\n    a: \"Go to Preferences and select your preferred language. The interface updates immediately.\",\r\n    tags: [\"language\", \"ui\"],\r\n  },\r\n  {\r\n    q: \"How do I reset my password?\",\r\n    a: \"Under Profile > Security, enter your current password and set a new one that meets strength requirements.\",\r\n    tags: [\"password\", \"security\"],\r\n  },\r\n  {\r\n    q: \"I have slow connectivity in my village. What can I do?\",\r\n    a: \"Turn on Data Saver and Auto Sync on Wi‑Fi only. Use text mode lessons and download content when you have connectivity.\",\r\n    tags: [\"rural\", \"connectivity\", \"slow\"],\r\n  },\r\n];\r\n\r\nexport default function SettingsAndSupport({\r\n  className,\r\n  style,\r\n  defaultLanguage = \"en\",\r\n  onLanguageChange,\r\n  onProfileSave,\r\n  onPasswordChange,\r\n  onContactSubmit,\r\n  initialNotifications,\r\n  initialAccessibility,\r\n  initialSync,\r\n  initialPrivacy,\r\n}: SettingsAndSupportProps) {\r\n  const [language, setLanguage] = React.useState<LanguageCode>(defaultLanguage);\r\n  const [name, setName] = React.useState<string>(\"\");\r\n  const [email, setEmail] = React.useState<string>(\"\");\r\n  const [phone, setPhone] = React.useState<string>(\"\");\r\n  const [avatarUrl, setAvatarUrl] = React.useState<string | undefined>(\r\n    \"https://images.unsplash.com/photo-1544005313-94ddf0286df2?q=80&w=256&auto=format&fit=crop\"\r\n  );\r\n  const [avatarObjectUrl, setAvatarObjectUrl] = React.useState<string | null>(null);\r\n\r\n  const [notif, setNotif] = React.useState<NotificationPrefs>({\r\n    email: !!initialNotifications?.email,\r\n    sms: !!initialNotifications?.sms,\r\n    push: initialNotifications?.push ?? true,\r\n    weeklyDigest: initialNotifications?.weeklyDigest ?? true,\r\n    reminders: initialNotifications?.reminders ?? true,\r\n  });\r\n\r\n  const [a11y, setA11y] = React.useState<AccessibilityPrefs>({\r\n    highContrast: !!initialAccessibility?.highContrast,\r\n    largeText: !!initialAccessibility?.largeText,\r\n    reduceMotion: !!initialAccessibility?.reduceMotion,\r\n    captions: initialAccessibility?.captions ?? true,\r\n    screenReaderHints: initialAccessibility?.screenReaderHints ?? true,\r\n  });\r\n\r\n  const [sync, setSync] = React.useState<SyncPrefs>({\r\n    offlineMode: initialSync?.offlineMode ?? true,\r\n    autoSyncOnWifi: initialSync?.autoSyncOnWifi ?? true,\r\n    dataSaver: initialSync?.dataSaver ?? true,\r\n  });\r\n\r\n  const [privacy, setPrivacy] = React.useState<PrivacyPrefs>({\r\n    profileVisibility: initialPrivacy?.profileVisibility ?? \"classmates\",\r\n    analyticsSharing: initialPrivacy?.analyticsSharing ?? false,\r\n    contentFiltering: initialPrivacy?.contentFiltering ?? true,\r\n  });\r\n\r\n  const [faqQuery, setFaqQuery] = React.useState<string>(\"\");\r\n  const [contactCategory, setContactCategory] = React.useState<\"technical\" | \"billing\" | \"feedback\" | \"other\" | undefined>();\r\n  const [contactMessage, setContactMessage] = React.useState<string>(\"\");\r\n\r\n  const filteredFaqs = React.useMemo(() => {\r\n    const q = faqQuery.trim().toLowerCase();\r\n    if (!q) return faqItems;\r\n    return faqItems.filter(\r\n      (f) =>\r\n        f.q.toLowerCase().includes(q) ||\r\n        f.a.toLowerCase().includes(q) ||\r\n        f.tags.some((t) => t.toLowerCase().includes(q))\r\n    );\r\n  }, [faqQuery]);\r\n\r\n  React.useEffect(() => {\r\n    // Apply visual preferences that impact the component (e.g., large text)\r\n    // Parent layouts should use tokens; here we only adjust a class.\r\n    document.documentElement.style.setProperty(\r\n      \"--motion-safe\",\r\n      a11y.reduceMotion ? \"no-preference\" : \"reduce\"\r\n    );\r\n    // Cleanup avatar object URL on unmount\r\n    return () => {\r\n      if (avatarObjectUrl) {\r\n        URL.revokeObjectURL(avatarObjectUrl);\r\n      }\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [a11y.reduceMotion]);\r\n\r\n  function handleLanguageChange(next: LanguageCode) {\r\n    setLanguage(next);\r\n    toast.success(\"Language updated\", { description: \"Your interface has been updated.\" });\r\n    onLanguageChange?.(next);\r\n  }\r\n\r\n  function handleAvatarUpload(e: React.ChangeEvent<HTMLInputElement>) {\r\n    const file = e.target.files?.[0];\r\n    if (!file) return;\r\n    if (!file.type.startsWith(\"image/\")) {\r\n      toast.error(\"Please select an image file.\");\r\n      return;\r\n    }\r\n    const objUrl = URL.createObjectURL(file);\r\n    if (avatarObjectUrl) URL.revokeObjectURL(avatarObjectUrl);\r\n    setAvatarObjectUrl(objUrl);\r\n    setAvatarUrl(objUrl);\r\n  }\r\n\r\n  function handleProfileSave() {\r\n    if (!name.trim() || !email.trim()) {\r\n      toast.error(\"Please fill in your name and email.\");\r\n      return;\r\n    }\r\n    onProfileSave?.({ name: name.trim(), email: email.trim(), phone: phone.trim(), avatarUrl });\r\n    toast.success(\"Profile updated\", { description: \"Your profile changes have been saved.\" });\r\n  }\r\n\r\n  function handlePasswordChange(e: React.FormEvent<HTMLFormElement>) {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    const current = (form.elements.namedItem(\"currentPassword\") as HTMLInputElement)?.value;\r\n    const next = (form.elements.namedItem(\"newPassword\") as HTMLInputElement)?.value;\r\n    const confirm = (form.elements.namedItem(\"confirmPassword\") as HTMLInputElement)?.value;\r\n\r\n    if (!current || !next) {\r\n      toast.error(\"Please complete all password fields.\");\r\n      return;\r\n    }\r\n    if (next.length < 8) {\r\n      toast.error(\"Password too short\", { description: \"Use at least 8 characters.\" });\r\n      return;\r\n    }\r\n    if (next !== confirm) {\r\n      toast.error(\"Passwords do not match.\");\r\n      return;\r\n    }\r\n    onPasswordChange?.({ current, next });\r\n    toast.success(\"Password changed\", { description: \"Use your new password next time you sign in.\" });\r\n    form.reset();\r\n  }\r\n\r\n  function handleContactSubmit(e: React.FormEvent) {\r\n    e.preventDefault();\r\n    if (!contactCategory || !contactMessage.trim()) {\r\n      toast.error(\"Please select a category and enter your message.\");\r\n      return;\r\n    }\r\n    onContactSubmit?.({ category: contactCategory, message: contactMessage.trim() });\r\n    toast.success(\"Message sent\", { description: \"Our team will get back to you shortly.\" });\r\n    setContactCategory(undefined);\r\n    setContactMessage(\"\");\r\n  }\r\n\r\n  const labelMuted = \"text-sm text-muted-foreground\";\r\n  const sectionTitle = \"text-base sm:text-lg font-semibold\";\r\n\r\n  return (\r\n    <section\r\n      className={cn(\r\n        \"w-full max-w-full bg-card rounded-2xl border border-border p-4 sm:p-6 md:p-8 shadow-sm\",\r\n        className\r\n      )}\r\n      style={style}\r\n      aria-label=\"Settings and Support\"\r\n    >\r\n      <div className=\"flex items-start gap-3 sm:gap-4 mb-6 sm:mb-8\">\r\n        <div className=\"inline-flex h-10 w-10 items-center justify-center rounded-xl bg-accent\">\r\n          <Settings2 className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n        </div>\r\n        <div className=\"min-w-0\">\r\n          <h2 className=\"text-xl sm:text-2xl font-bold tracking-tight\">Settings & Support</h2>\r\n          <p className=\"text-sm text-muted-foreground mt-1\">\r\n            Manage your preferences, accessibility, privacy, and get help quickly.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <Tabs defaultValue=\"profile\" className=\"w-full\">\r\n        <div className=\"overflow-x-auto\">\r\n          <TabsList className=\"bg-secondary/60\">\r\n            <TabsTrigger value=\"profile\" className=\"min-w-fit\">\r\n              <UserRoundCog className=\"mr-2 h-4 w-4\" aria-hidden=\"true\" />\r\n              Profile\r\n            </TabsTrigger>\r\n            <TabsTrigger value=\"preferences\" className=\"min-w-fit\">\r\n              <Languages className=\"mr-2 h-4 w-4\" aria-hidden=\"true\" />\r\n              Preferences\r\n            </TabsTrigger>\r\n            <TabsTrigger value=\"notifications\" className=\"min-w-fit\">\r\n              <Speech className=\"mr-2 h-4 w-4\" aria-hidden=\"true\" />\r\n              Notifications\r\n            </TabsTrigger>\r\n            <TabsTrigger value=\"privacy\" className=\"min-w-fit\">\r\n              <CircleQuestionMark className=\"mr-2 h-4 w-4\" aria-hidden=\"true\" />\r\n              Privacy\r\n            </TabsTrigger>\r\n            <TabsTrigger value=\"accessibility\" className=\"min-w-fit\">\r\n              <AccessibilityIcon className=\"mr-2 h-4 w-4\" aria-hidden=\"true\" />\r\n              Accessibility\r\n            </TabsTrigger>\r\n            <TabsTrigger value=\"support\" className=\"min-w-fit\">\r\n              <MessageCircleQuestionMark className=\"mr-2 h-4 w-4\" aria-hidden=\"true\" />\r\n              Support\r\n            </TabsTrigger>\r\n            <TabsTrigger value=\"account\" className=\"min-w-fit\">\r\n              <Monitor className=\"mr-2 h-4 w-4\" aria-hidden=\"true\" />\r\n              Account\r\n            </TabsTrigger>\r\n          </TabsList>\r\n        </div>\r\n\r\n        <TabsContent value=\"profile\" className=\"mt-6\">\r\n          <div className=\"grid grid-cols-1 gap-6\">\r\n            <Card className=\"bg-card\">\r\n              <CardHeader>\r\n                <CardTitle className={sectionTitle}>Profile</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"grid gap-6\">\r\n                <div className=\"flex items-center gap-4\">\r\n                  <Avatar className=\"h-16 w-16 rounded-xl\">\r\n                    <AvatarImage\r\n                      src={avatarUrl}\r\n                      alt={name ? `${name}'s avatar` : \"User avatar\"}\r\n                      className=\"object-cover\"\r\n                    />\r\n                    <AvatarFallback className=\"rounded-xl\">U</AvatarFallback>\r\n                  </Avatar>\r\n                  <div className=\"min-w-0\">\r\n                    <p className={labelMuted}>Avatar</p>\r\n                    <div className=\"flex items-center gap-3 mt-2\">\r\n                      <label htmlFor=\"avatar-upload\">\r\n                        <input\r\n                          id=\"avatar-upload\"\r\n                          type=\"file\"\r\n                          accept=\"image/*\"\r\n                          className=\"sr-only\"\r\n                          onChange={handleAvatarUpload}\r\n                        />\r\n                        <Button variant=\"secondary\" size=\"sm\" asChild={false} onClick={() => {\r\n                          const el = document.getElementById(\"avatar-upload\") as HTMLInputElement | null;\r\n                          el?.click();\r\n                        }}>\r\n                          Change\r\n                        </Button>\r\n                      </label>\r\n                      <Button\r\n                        variant=\"ghost\"\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          setAvatarUrl(undefined);\r\n                          if (avatarObjectUrl) {\r\n                            URL.revokeObjectURL(avatarObjectUrl);\r\n                            setAvatarObjectUrl(null);\r\n                          }\r\n                        }}\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"grid gap-4 sm:grid-cols-2\">\r\n                  <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"name\">Full name</Label>\r\n                    <Input\r\n                      id=\"name\"\r\n                      placeholder=\"Enter your name\"\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                      className=\"bg-background\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"email\">Email</Label>\r\n                    <Input\r\n                      id=\"email\"\r\n                      type=\"email\"\r\n                      placeholder=\"you@example.com\"\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                      className=\"bg-background\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"phone\">Phone</Label>\r\n                    <Input\r\n                      id=\"phone\"\r\n                      type=\"tel\"\r\n                      placeholder=\"+91 98765 43210\"\r\n                      value={phone}\r\n                      onChange={(e) => setPhone(e.target.value)}\r\n                      className=\"bg-background\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex justify-end\">\r\n                  <Button onClick={handleProfileSave}>Save changes</Button>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card className=\"bg-card\">\r\n              <CardHeader>\r\n                <CardTitle className={sectionTitle}>Security</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <form onSubmit={handlePasswordChange} className=\"grid gap-4 sm:grid-cols-3\">\r\n                  <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"currentPassword\">Current password</Label>\r\n                    <Input id=\"currentPassword\" name=\"currentPassword\" type=\"password\" className=\"bg-background\" />\r\n                  </div>\r\n                  <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"newPassword\">New password</Label>\r\n                    <Input id=\"newPassword\" name=\"newPassword\" type=\"password\" className=\"bg-background\" />\r\n                    <p className=\"text-xs text-muted-foreground\">At least 8 characters.</p>\r\n                  </div>\r\n                  <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"confirmPassword\">Confirm new password</Label>\r\n                    <Input id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" className=\"bg-background\" />\r\n                  </div>\r\n                  <div className=\"sm:col-span-3 flex justify-end pt-2\">\r\n                    <Button type=\"submit\">Update password</Button>\r\n                  </div>\r\n                </form>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"preferences\" className=\"mt-6\">\r\n          <div className=\"grid grid-cols-1 gap-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className={sectionTitle}>Language & Region</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"grid gap-4 sm:grid-cols-2\">\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"language\">Language</Label>\r\n                  <Select\r\n                    value={language}\r\n                    onValueChange={(v) => handleLanguageChange(v as LanguageCode)}\r\n                  >\r\n                    <SelectTrigger id=\"language\" className=\"bg-background\">\r\n                      <SelectValue placeholder=\"Select language\" />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      {languageOptions.map((opt) => (\r\n                        <SelectItem key={opt.code} value={opt.code}>\r\n                          {opt.label} — {opt.native}\r\n                        </SelectItem>\r\n                      ))}\r\n                    </SelectContent>\r\n                  </Select>\r\n                  <p className=\"text-xs text-muted-foreground\">\r\n                    Interface updates immediately after selection.\r\n                  </p>\r\n                </div>\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"content-language\">Content language preference</Label>\r\n                  <Select\r\n                    onValueChange={(v) => {\r\n                      toast.message(\"Content language set\", { description: v.toUpperCase() });\r\n                    }}\r\n                  >\r\n                    <SelectTrigger id=\"content-language\" className=\"bg-background\">\r\n                      <SelectValue placeholder=\"Follow interface\" />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      {languageOptions.map((opt) => (\r\n                        <SelectItem key={opt.code} value={opt.code}>\r\n                          {opt.label} — {opt.native}\r\n                        </SelectItem>\r\n                      ))}\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className={sectionTitle}>Data & Sync</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"grid gap-4\">\r\n                <SettingRow\r\n                  label=\"Offline mode\"\r\n                  description=\"Use LearnQuest without internet. Content is cached and syncs when online.\"\r\n                  checked={sync.offlineMode}\r\n                  onCheckedChange={(val) => setSync((s) => ({ ...s, offlineMode: val }))}\r\n                />\r\n                <SettingRow\r\n                  label=\"Auto sync on Wi‑Fi\"\r\n                  description=\"Sync downloads and progress automatically on Wi‑Fi.\"\r\n                  checked={sync.autoSyncOnWifi}\r\n                  onCheckedChange={(val) => setSync((s) => ({ ...s, autoSyncOnWifi: val }))}\r\n                />\r\n                <SettingRow\r\n                  label=\"Data saver\"\r\n                  description=\"Lower data usage by reducing media quality and prefetching.\"\r\n                  checked={sync.dataSaver}\r\n                  onCheckedChange={(val) => setSync((s) => ({ ...s, dataSaver: val }))}\r\n                />\r\n                <div className=\"flex justify-end pt-2\">\r\n                  <Button\r\n                    variant=\"secondary\"\r\n                    onClick={() => toast.success(\"Sync settings saved\")}\r\n                  >\r\n                    Save sync settings\r\n                  </Button>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"notifications\" className=\"mt-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className={sectionTitle}>Notification Preferences</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"grid gap-4\">\r\n              <SettingRow\r\n                label=\"Email updates\"\r\n                description=\"Announcements, class updates, and progress reports.\"\r\n                checked={notif.email}\r\n                onCheckedChange={(val) => setNotif((n) => ({ ...n, email: val }))}\r\n              />\r\n              <SettingRow\r\n                label=\"SMS alerts\"\r\n                description=\"Receive important alerts via text message.\"\r\n                checked={notif.sms}\r\n                onCheckedChange={(val) => setNotif((n) => ({ ...n, sms: val }))}\r\n              />\r\n              <SettingRow\r\n                label=\"Push notifications\"\r\n                description=\"Real-time updates on assignments and achievements.\"\r\n                checked={notif.push}\r\n                onCheckedChange={(val) => setNotif((n) => ({ ...n, push: val }))}\r\n              />\r\n              <Separator />\r\n              <SettingRow\r\n                label=\"Weekly digest\"\r\n                description=\"Summary of your learning progress every week.\"\r\n                checked={notif.weeklyDigest}\r\n                onCheckedChange={(val) => setNotif((n) => ({ ...n, weeklyDigest: val }))}\r\n              />\r\n              <SettingRow\r\n                label=\"Reminders\"\r\n                description=\"Reminders for due tasks and upcoming classes.\"\r\n                checked={notif.reminders}\r\n                onCheckedChange={(val) => setNotif((n) => ({ ...n, reminders: val }))}\r\n              />\r\n              <div className=\"flex justify-end pt-2\">\r\n                <Button onClick={() => toast.success(\"Notification preferences saved\")}>\r\n                  Save preferences\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"privacy\" className=\"mt-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className={sectionTitle}>Privacy Controls</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"grid gap-6\">\r\n              <div className=\"grid gap-2\">\r\n                <Label htmlFor=\"visibility\">Profile visibility</Label>\r\n                <Select\r\n                  value={privacy.profileVisibility}\r\n                  onValueChange={(v) =>\r\n                    setPrivacy((p) => ({ ...p, profileVisibility: v as PrivacyPrefs[\"profileVisibility\"] }))\r\n                  }\r\n                >\r\n                  <SelectTrigger id=\"visibility\" className=\"bg-background\">\r\n                    <SelectValue placeholder=\"Select visibility\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"everyone\">Everyone</SelectItem>\r\n                    <SelectItem value=\"classmates\">Classmates</SelectItem>\r\n                    <SelectItem value=\"only-me\">Only me</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  Control who can see your profile and achievements.\r\n                </p>\r\n              </div>\r\n              <SettingRow\r\n                label=\"Share anonymized analytics\"\r\n                description=\"Help us improve by sharing usage metrics without personal data.\"\r\n                checked={privacy.analyticsSharing}\r\n                onCheckedChange={(val) => setPrivacy((p) => ({ ...p, analyticsSharing: val }))}\r\n              />\r\n              <SettingRow\r\n                label=\"Content filtering\"\r\n                description=\"Hide sensitive or distracting content where possible.\"\r\n                checked={privacy.contentFiltering}\r\n                onCheckedChange={(val) => setPrivacy((p) => ({ ...p, contentFiltering: val }))}\r\n              />\r\n              <div className=\"flex justify-end\">\r\n                <Button\r\n                  variant=\"secondary\"\r\n                  onClick={() => toast.success(\"Privacy settings saved\")}\r\n                >\r\n                  Save privacy settings\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"accessibility\" className=\"mt-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className={sectionTitle}>Accessibility Options</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"grid gap-4\">\r\n              <SettingRow\r\n                label=\"High contrast\"\r\n                description=\"Improve readability with higher contrast colors.\"\r\n                checked={a11y.highContrast}\r\n                onCheckedChange={(val) => setA11y((s) => ({ ...s, highContrast: val }))}\r\n              />\r\n              <SettingRow\r\n                label=\"Large text\"\r\n                description=\"Increase text size for better legibility.\"\r\n                checked={a11y.largeText}\r\n                onCheckedChange={(val) => setA11y((s) => ({ ...s, largeText: val }))}\r\n              />\r\n              <SettingRow\r\n                label=\"Reduce motion\"\r\n                description=\"Minimize animations and transitions.\"\r\n                checked={a11y.reduceMotion}\r\n                onCheckedChange={(val) => setA11y((s) => ({ ...s, reduceMotion: val }))}\r\n              />\r\n              <SettingRow\r\n                label=\"Captions\"\r\n                description=\"Show captions for audio/video where available.\"\r\n                checked={a11y.captions}\r\n                onCheckedChange={(val) => setA11y((s) => ({ ...s, captions: val }))}\r\n              />\r\n              <SettingRow\r\n                label=\"Screen reader hints\"\r\n                description=\"Provide additional descriptions for assistive tech.\"\r\n                checked={a11y.screenReaderHints}\r\n                onCheckedChange={(val) => setA11y((s) => ({ ...s, screenReaderHints: val }))}\r\n              />\r\n              <div className=\"flex justify-end\">\r\n                <Button\r\n                  onClick={() => toast.success(\"Accessibility preferences saved\")}\r\n                >\r\n                  Save accessibility\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"support\" className=\"mt-6\">\r\n          <div className=\"grid grid-cols-1 gap-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className={sectionTitle}>Find Answers</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"grid gap-4\">\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"faq-search\" className=\"sr-only\">Search help</Label>\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Input\r\n                      id=\"faq-search\"\r\n                      placeholder=\"Search FAQs (e.g., offline, password, video)\"\r\n                      value={faqQuery}\r\n                      onChange={(e) => setFaqQuery(e.target.value)}\r\n                      className=\"bg-background\"\r\n                    />\r\n                    <Button\r\n                      variant=\"secondary\"\r\n                      onClick={() => {\r\n                        const first = filteredFaqs[0];\r\n                        if (first) {\r\n                          toast.message(\"Top result\", { description: first.q });\r\n                        } else {\r\n                          toast.message(\"No results\", { description: \"Try a different keyword.\" });\r\n                        }\r\n                      }}\r\n                    >\r\n                      Search\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n                <Accordion type=\"single\" collapsible className=\"w-full\">\r\n                  {filteredFaqs.map((item, idx) => (\r\n                    <AccordionItem key={idx} value={`faq-${idx}`}>\r\n                      <AccordionTrigger className=\"text-left\">{item.q}</AccordionTrigger>\r\n                      <AccordionContent>\r\n                        <p className=\"text-sm leading-relaxed\">{item.a}</p>\r\n                      </AccordionContent>\r\n                    </AccordionItem>\r\n                  ))}\r\n                </Accordion>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className={sectionTitle}>AI Chat Support</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"grid gap-3\">\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  Ask a quick question. Our assistant will guide you to the right resource.\r\n                </p>\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"chat-question\" className=\"sr-only\">Your question</Label>\r\n                  <Textarea\r\n                    id=\"chat-question\"\r\n                    placeholder=\"Type your question here...\"\r\n                    className=\"bg-background min-h-24\"\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === \"Enter\" && (e.ctrlKey || e.metaKey)) {\r\n                        e.preventDefault();\r\n                        toast.info(\"Sending to AI assistant…\");\r\n                      }\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"flex justify-end gap-2\">\r\n                  <Button\r\n                    variant=\"secondary\"\r\n                    onClick={() => toast.info(\"Sending to AI assistant…\")}\r\n                  >\r\n                    Ask\r\n                  </Button>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className={sectionTitle}>Contact Support</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <form onSubmit={handleContactSubmit} className=\"grid gap-4\">\r\n                  <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"category\">Category</Label>\r\n                    <Select\r\n                      value={contactCategory}\r\n                      onValueChange={(v) => setContactCategory(v as typeof contactCategory)}\r\n                    >\r\n                      <SelectTrigger id=\"category\" className=\"bg-background\">\r\n                        <SelectValue placeholder=\"Choose a category\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"technical\">Technical</SelectItem>\r\n                        <SelectItem value=\"billing\">Billing</SelectItem>\r\n                        <SelectItem value=\"feedback\">Feedback</SelectItem>\r\n                        <SelectItem value=\"other\">Other</SelectItem>\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                  <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"message\">Message</Label>\r\n                    <Textarea\r\n                      id=\"message\"\r\n                      value={contactMessage}\r\n                      onChange={(e) => setContactMessage(e.target.value)}\r\n                      placeholder=\"Describe your issue or question\"\r\n                      className=\"bg-background min-h-28\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex justify-end\">\r\n                    <Button type=\"submit\">Send message</Button>\r\n                  </div>\r\n                </form>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className={sectionTitle}>Troubleshooting</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"grid gap-6\">\r\n                <div>\r\n                  <div className=\"flex items-center gap-2 mb-2\">\r\n                    <LaptopMinimal className=\"h-4 w-4\" aria-hidden=\"true\" />\r\n                    <h4 className=\"font-medium\">Rural Connectivity Tips</h4>\r\n                  </div>\r\n                  <ul className=\"list-disc pl-5 space-y-1 text-sm\">\r\n                    <li>Enable Offline Mode and Data Saver in Preferences.</li>\r\n                    <li>Download lessons when connected to Wi‑Fi (school or community center).</li>\r\n                    <li>Prefer text-based lessons; reduce motion and media quality.</li>\r\n                    <li>Sync progress during low-traffic hours (early morning/late night).</li>\r\n                  </ul>\r\n                </div>\r\n                <div>\r\n                  <div className=\"flex items-center gap-2 mb-2\">\r\n                    <Monitor className=\"h-4 w-4\" aria-hidden=\"true\" />\r\n                    <h4 className=\"font-medium\">Device Compatibility</h4>\r\n                  </div>\r\n                  <ul className=\"list-disc pl-5 space-y-1 text-sm\">\r\n                    <li>Update your device OS and browser to the latest version available.</li>\r\n                    <li>Enable storage permissions to allow content downloads.</li>\r\n                    <li>If videos stutter, lower quality or use captions-only mode.</li>\r\n                    <li>Clear app cache if UI feels slow; restart the app.</li>\r\n                  </ul>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"account\" className=\"mt-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className={sectionTitle}>Account Management</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"grid gap-4\">\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Manage your account and export or delete your data.\r\n              </p>\r\n              <div className=\"flex flex-wrap gap-3\">\r\n                <Button\r\n                  variant=\"secondary\"\r\n                  onClick={() => toast.message(\"Export requested\", { description: \"We’ll email your data export.\" })}\r\n                >\r\n                  Export my data\r\n                </Button>\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  onClick={() =>\r\n                    toast.info(\"Sign out\", { description: \"You have been signed out on this device.\" })\r\n                  }\r\n                >\r\n                  Sign out\r\n                </Button>\r\n                <Button\r\n                  variant=\"destructive\"\r\n                  onClick={() =>\r\n                    toast(\"Confirm deletion\", {\r\n                      description: \"Please contact support to permanently delete your account.\",\r\n                    })\r\n                  }\r\n                >\r\n                  Delete account\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction SettingRow({\r\n  label,\r\n  description,\r\n  checked,\r\n  onCheckedChange,\r\n}: {\r\n  label: string;\r\n  description?: string;\r\n  checked: boolean;\r\n  onCheckedChange: (checked: boolean) => void;\r\n}) {\r\n  return (\r\n    <div className=\"flex items-start justify-between gap-4 p-3 rounded-xl bg-secondary/40\">\r\n      <div className=\"min-w-0\">\r\n        <p className=\"text-sm font-medium leading-6\">{label}</p>\r\n        {description ? (\r\n          <p className=\"text-xs text-muted-foreground mt-0.5\">{description}</p>\r\n        ) : null}\r\n      </div>\r\n      <Switch\r\n        checked={checked}\r\n        onCheckedChange={onCheckedChange}\r\n        aria-label={label}\r\n      />\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}